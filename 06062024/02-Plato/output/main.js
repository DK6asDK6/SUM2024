!function(){"use strict";class t{constructor(t){null!=t&&null!=t?"object"==typeof t&&4==t.length?this.m=t:this.m=t.m:this.m=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]}determ(){return this.m[0][0]*s(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])+-this.m[0][1]*s(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])+this.m[0][2]*s(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])+-this.m[0][3]*s(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])}mul(t){let i=m();return i.m[0][0]=this.m[0][0]*t.m[0][0]+this.m[0][1]*t.m[1][0]+this.m[0][2]*t.m[2][0]+this.m[0][3]*t.m[3][0],i.m[0][1]=this.m[0][0]*t.m[0][1]+this.m[0][1]*t.m[1][1]+this.m[0][2]*t.m[2][1]+this.m[0][3]*t.m[3][1],i.m[0][2]=this.m[0][0]*t.m[0][2]+this.m[0][1]*t.m[1][2]+this.m[0][2]*t.m[2][2]+this.m[0][3]*t.m[3][2],i.m[0][3]=this.m[0][0]*t.m[0][3]+this.m[0][1]*t.m[1][3]+this.m[0][2]*t.m[2][3]+this.m[0][3]*t.m[3][3],i.m[1][0]=this.m[1][0]*t.m[0][0]+this.m[1][1]*t.m[1][0]+this.m[1][2]*t.m[2][0]+this.m[1][3]*t.m[3][0],i.m[1][1]=this.m[1][0]*t.m[0][1]+this.m[1][1]*t.m[1][1]+this.m[1][2]*t.m[2][1]+this.m[1][3]*t.m[3][1],i.m[1][2]=this.m[1][0]*t.m[0][2]+this.m[1][1]*t.m[1][2]+this.m[1][2]*t.m[2][2]+this.m[1][3]*t.m[3][2],i.m[1][3]=this.m[1][0]*t.m[0][3]+this.m[1][1]*t.m[1][3]+this.m[1][2]*t.m[2][3]+this.m[1][3]*t.m[3][3],i.m[2][0]=this.m[2][0]*t.m[0][0]+this.m[2][1]*t.m[1][0]+this.m[2][2]*t.m[2][0]+this.m[2][3]*t.m[3][0],i.m[2][1]=this.m[2][0]*t.m[0][1]+this.m[2][1]*t.m[1][1]+this.m[2][2]*t.m[2][1]+this.m[2][3]*t.m[3][1],i.m[2][2]=this.m[2][0]*t.m[0][2]+this.m[2][1]*t.m[1][2]+this.m[2][2]*t.m[2][2]+this.m[2][3]*t.m[3][2],i.m[2][3]=this.m[2][0]*t.m[0][3]+this.m[2][1]*t.m[1][3]+this.m[2][2]*t.m[2][3]+this.m[2][3]*t.m[3][3],i.m[3][0]=this.m[3][0]*t.m[0][0]+this.m[3][1]*t.m[1][0]+this.m[3][2]*t.m[2][0]+this.m[3][3]*t.m[3][0],i.m[3][1]=this.m[3][0]*t.m[0][1]+this.m[3][1]*t.m[1][1]+this.m[3][2]*t.m[2][1]+this.m[3][3]*t.m[3][1],i.m[3][2]=this.m[3][0]*t.m[0][2]+this.m[3][1]*t.m[1][2]+this.m[3][2]*t.m[2][2]+this.m[3][3]*t.m[3][2],i.m[3][3]=this.m[3][0]*t.m[0][3]+this.m[3][1]*t.m[1][3]+this.m[3][2]*t.m[2][3]+this.m[3][3]*t.m[3][3],i}mul3(t,i){return this.mul(t.mul(i))}mul4(t,i,s){return this.mul(t.mul3(i,s))}mul5(t,i,s,m){return this.mul(t.mul4(i,s,m))}mul6(t,i,s,m,h){return this.mul(t.mul5(i,s,m,h))}inverse(){let t=m(),i=this.determ();return 0==i||(t.m[0][0]=+s(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/i,t.m[1][0]=-s(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/i,t.m[2][0]=+s(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/i,t.m[3][0]=+s(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/i,t.m[0][1]=+s(this.m[0][1],this.m[0][2],this.m[0][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/i,t.m[1][1]=-s(this.m[0][0],this.m[0][2],this.m[0][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/i,t.m[2][1]=+s(this.m[0][0],this.m[0][1],this.m[0][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/i,t.m[3][1]=+s(this.m[0][0],this.m[0][1],this.m[0][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/i,t.m[0][2]=+s(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[3][1],this.m[3][2],this.m[3][3])/i,t.m[1][2]=-s(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[3][0],this.m[3][2],this.m[3][3])/i,t.m[2][2]=+s(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[3][0],this.m[3][1],this.m[3][3])/i,t.m[3][2]=+s(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[3][0],this.m[3][1],this.m[3][2])/i,t.m[0][3]=+s(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3])/i,t.m[1][3]=-s(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3])/i,t.m[2][3]=+s(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3])/i,t.m[3][3]=+s(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2])/i),t}transpose(){return m([[this.m[0][0],this.m[1][0],this.m[2][0],this.m[3][0]],[this.m[0][1],this.m[1][1],this.m[2][1],this.m[3][1]],[this.m[0][2],this.m[1][2],this.m[2][2],this.m[3][2]],[this.m[0][3],this.m[1][3],this.m[2][3],this.m[3][3]]])}}function i(t,i){let s=180*t/Math.PI,h=Math.sin(s),e=Math.cos(s);let r=i.normalize();return m([[e+r.x*r.x*(1-e),r.y*r.x*(1-e)-r.z*h,r.z*r.x*(1-e)+r.y*h,0],[r.x*r.y*(1-e)+r.z*h,e+r.y*r.y*(1-e),r.z*r.y*(1-e)-r.x*h,0],[r.x*r.z*(1-e)-r.y*h,r.y*r.z*(1-e)+r.x*h,e+r.z*r.z*(1-e),0],[0,0,0,1]])}function s(t,i,s,m,h,e,r,n,l){return t*h*l+i*e*r+s*m*n-t*e*n-i*m*l-s*h*r}function m(i){return new t(i)}class h{constructor(t,i,s){if(null==t)return e(0,0,0);"object"==typeof t?3==length(t)?(this.x=t[0],this.y=t[1],this.z=t[2]):(this.x=t,this.y=i,this.z=s):null==i||null==s?(this.x=t,this.y=t,this.z=t):(this.x=t,this.y=i,this.z=s)}add(t){return null==t?e(this):"number"==typeof t?e(this.x+t,this.y+t,this.z+t):e(this.x+t.x,this.y+t.y,this.z+t.z)}add3(t,i){return this.add(t.add(i))}add4(t,i,s){return this.add(t.add3(i,s))}sub(t){return null==t?e(this):"number"==typeof t?e(this.x-t,this.y-t,this.z-t):e(this.x-t.x,this.y-t.y,this.z-t.z)}mul(t){return null==t?e(this):"number"==typeof t?e(this.x*t,this.y*t,this.z*t):"object"==typeof t?e(this.x*t[0],this.y*t[0],this.z*t[0]):void 0}div(t){return null==t?e(this):"number"==typeof t?e(this.x/t,this.y/t,this.z/t):"object"==typeof t?e(this.x/t[0],this.y/t[0],this.z/t[0]):void 0}neg(){return e(-this.x,-this.y,-this.z)}dot(t){return null==t?this.dot(this):"number"==typeof t?this.x*t+this.y*t+this.z*t:this.x*t.x+this.y*t.y+this.z*t.z}len(){let t=this.dot();return 1==t||0==t?t:Math.sqrt(t)}normalize(){let t=this.len();return 1==t||0==t?e(this):this.div(t)}cross(t){return null==t?e(this):"number"==typeof t?this.cross(e(t)):e(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}transform(t){return e(this.x*t.m[0][0]+this.y*t.m[1][0]+this.z*t.m[2][0],this.x*t.m[0][1]+this.y*t.m[1][1]+this.z*t.m[2][1],this.x*t.m[0][2]+this.y*t.m[1][2]+this.z*t.m[2][2])}mulMatr(t){let i=this.x*t.m[0][3]+this.y*t.m[1][3]+this.z*t.m[2][3]+t.m[3][3];return e(this.x*t.m[0][0]+this.y*t.m[1][0]+this.z*t.m[2][0]+t.m[3][0],this.x*t.m[0][1]+this.y*t.m[1][1]+this.z*t.m[2][1]+t.m[3][1],this.x*t.m[0][2]+this.y*t.m[1][2]+this.z*t.m[2][2]+t.m[3][2]).div(i)}pointTransform(t){return e(this.x*t.m[0][0]+this.y*t.m[1][0]+this.z*t.m[2][0]+t.m[3][0],this.x*t.m[0][1]+this.y*t.m[1][1]+this.z*t.m[2][1]+t.m[3][1],this.x*t.m[0][2]+this.y*t.m[1][2]+this.z*t.m[2][2]+t.m[3][2])}}function e(...t){return new h(...t)}class r{constructor(t,i){this.pos=t,this.norm=null!=i?i:e()}}function n(t,i){return new r(t,i)}class l{constructor(t,i,s){let h=[],e=0;for(let t of i)h[e++]=t.pos.x,h[e++]=t.pos.y,h[e++]=t.pos.z,h[e++]=t.norm.x,h[e++]=t.norm.y,h[e++]=t.norm.z;const r=t.gl.getAttribLocation(t.prg,"InPosition"),n=t.gl.getAttribLocation(t.prg,"InNormal");this.vertexArray=t.gl.createVertexArray(),t.gl.bindVertexArray(this.vertexArray),this.vertexBuffer=t.gl.createBuffer(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,this.vertexBuffer),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(h),t.gl.STATIC_DRAW),-1!=r&&(t.gl.vertexAttribPointer(r,3,t.gl.FLOAT,!1,24,0),t.gl.enableVertexAttribArray(r)),-1!=n&&(t.gl.vertexAttribPointer(n,3,t.gl.FLOAT,!1,24,12),t.gl.enableVertexAttribArray(n)),this.indexBuffer=t.gl.createBuffer(),t.gl.bindBuffer(t.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.gl.bufferData(t.gl.ELEMENT_ARRAY_BUFFER,new Uint32Array(s),t.gl.STATIC_DRAW),this.numOfElements=s.length,this.world=m()}draw(t){t.gl.bindVertexArray(this.vertexArray),t.gl.bindBuffer(t.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.gl.drawElements(t.gl.TRIANGLES,this.numOfElements,t.gl.UNSIGNED_INT,0),-1!=t.wvpLoc&&t.gl.uniformMatrix4fv(t.wvpLoc,!1,new Float32Array([].concat(this.world.mul(t.proj))))}}function o(){const t=()=>{const t=new Date;return t.getMilliseconds/1e3+t.getSeconds()+60*t.getMinutes};return this.responce=(i=null)=>{let s=t();this.globalTime=s,this.globalDeltaTime=s-this.oldTime,this.isPause?(this.localDeltaTime=0,this.pauseTime+=s-this.oldTime):(this.localDeltaTime=this.globalDeltaTime,this.localTime=s-this.pauseTime-this.startTime),this.frameCounter++,s-this.oldTimeFPS>3&&(this.FPS=this.frameCounter/(s-this.oldTimeFPS),this.oldTimeFPS=s,this.frameCounter=0,null!=i&&(document.getElementById(i).innerHTML=this.getFPS())),this.oldTime=s},this.getFPS=()=>this.FPS.toFixed(3),this.globalTime=this.localTime=t(),this.globalDeltaTime=this.localDeltaTime=0,this.startTime=this.oldTime=this.oldTimeFPS=this.globalTime,this.frameCounter=0,this.isPause=!1,this.FPS=30,this.pauseTime=0,this}class a{constructor(t){this.gl=t.getContext("webgl2"),this.width=t.width,this.height=t.height,this.gl.enable(this.gl.DEPTH_TEST),window.gl=this.gl;let i=u(this.gl.VERTEX_SHADER,"#version 300 es\nprecision highp float;\n\nin vec3 InPosition;\nin vec3 InNormal;\n    \nout vec2 DrawPos;\nout vec3 DrawNormal;\n\nuniform float Time;\nuniform mat4 MatrWVP;\n \nvoid main( void )\n{\n  gl_Position = MatrWVP * vec4(InPosition, 1);\n  DrawPos = InPosition.xy;\n}\n    "),s=u(this.gl.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec3 DrawNormal;\nout vec4 OutColor;\n\nuniform float Time;\nuniform vec3 CamDir;\n \nvoid main( void )\n{\n  vec3 CamDir = vec3(-5, -5, -5);\n  float nl = max(0.2, dot(DrawNormal, normalize(-CamDir)));\n  vec3 DrawColor = vec3(0.7, 0.45, 0.17);\n\n  OutColor = vec4(DrawColor * nl, 1.0);\n}\n    ");if(this.prg=this.gl.createProgram(),this.gl.attachShader(this.prg,i),this.gl.attachShader(this.prg,s),this.gl.linkProgram(this.prg),!this.gl.getProgramParameter(this.prg,gl.LINK_STATUS)){let t=gl.getProgramInfoLog(this.prg);console.log("Shader program link fail: "+t)}this.timeLoc=this.gl.getUniformLocation(this.prg,"Time"),this.wvpLoc=this.gl.getUniformLocation(this.prg,"MAtrWVP"),this.camDirLoc=this.gl.getUniformLocation(this.prg,"CamDir"),this.gl.useProgram(this.prg),this.gl.clearColor(.3,.47,.8,1),this.projSize=.1,this.projDist=.1,this.farClip=300;let h=this.projSize,e=this.projSize;var r,n,l,a,g,c;this.width>=this.height?h*=this.width/this.height:e*=this.height/this.width,h*=.5,e*=.5,this.proj=(r=-h,n=h,l=-e,a=e,g=this.projDist,c=this.farClip,m([[2*g/(n-r),0,0,0],[0,2*g/(a-l),0,0],[(n+r)/(n-r),(a+l)/(a-l),-(c+g)/(c-g),-1],[0,0,-2*g*c/(c-g),0]])),this.time=new o,this.time.responce()}render(){this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.clear(this.gl.DEPTH_BUFFER_BIT),this.gl.uniform1f(this.timeLoc,this.time.globalTime)}}function u(t,i){const s=gl.createShader(t);if(gl.shaderSource(s,i),gl.compileShader(s),!gl.getShaderParameter(s,gl.COMPILE_STATUS)){let t=gl.getShaderInfoLog(s);console.log("Shader compile fail: "+t)}return s}let g,c,d;const f=()=>{var t;g.render(),c.world=i(Math.sin(d.localTime),e(1,1,3)).mul(m([[1,0,0,0],[0,1,0,0],[0,0,1,0],[(t=e(0,Math.cos(2*d.localTime),0)).x,t.y,t.z,1]])),c.draw(g),g.render(),window.requestAnimationFrame(f)};function y(){g=function(...t){return new a(...t)}(document.getElementById("myCan")),d=new o,d.responce("myCan:fps");let t=[n(e(-1)),n(e(-1,1,-1)),n(e(1,1,-1)),n(e(1,-1,-1)),n(e(-1,-1,1)),n(e(-1,1,1)),n(e(1,1,1)),n(e(1,-1,1))],i=[0,1,2,0,2,3,4,5,6,4,6,7,0,1,4,1,4,5,2,6,7,2,7,3,1,5,6,1,6,2,0,4,7,0,7,3];!function(t,i){for(let i in t)t[i].norm=e();for(let s=0;s<i.length;s+=3){let m=i[s],h=i[s+1],e=i[s+2],r=t[m].pos,n=t[h].pos,l=t[e].pos,o=n.sub(r).cross(l.sub(r)).normalize();t[m].norm=t[m].norm.add(o),t[h].norm=t[h].norm.add(o),t[e].norm=t[e].norm.add(o)}for(let i in t)t[i].norm=t[i].norm.normalize()}(t,i),c=function(t,i,s){return new l(t,i,s)}(g,t,i),f()}window.addEventListener("load",(()=>{y()})),console.log("CGSG forever!!! mylib.js imported")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL210aC9tdGhfbWF0NC5qcyIsIi4uL3NyYy9tdGgvbXRoX3ZlYzMuanMiLCIuLi9zcmMvcm5kL3ByaW0vcHJpbS5qcyIsIi4uL3NyYy90aW1lci90aW1lci5qcyIsIi4uL3NyYy9ybmQvcm5kLmpzIiwiLi4vc3JjL21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gRDJSKHJhZGlhbikge1xyXG4gIHJldHVybiAocmFkaWFuICogMTgwKSAvIE1hdGguUEk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBNYXRyaXggNHg0IGNsYXNzLlxyXG4gKi9cclxuY2xhc3MgX21hdDQge1xyXG4gIC8vIF9tYXQ0IGNvbnN0cnVjdG9yIGZ1bmN0aW9uLlxyXG4gIGNvbnN0cnVjdG9yKG0pIHtcclxuICAgIGlmIChtID09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLm0gPSBbXHJcbiAgICAgICAgWzEsIDAsIDAsIDBdLFxyXG4gICAgICAgIFswLCAxLCAwLCAwXSxcclxuICAgICAgICBbMCwgMCwgMSwgMF0sXHJcbiAgICAgICAgWzAsIDAsIDAsIDFdLFxyXG4gICAgICBdO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAobSA9PSBudWxsKSB7XHJcbiAgICAgIHRoaXMubSA9IFtcclxuICAgICAgICBbMSwgMCwgMCwgMF0sXHJcbiAgICAgICAgWzAsIDEsIDAsIDBdLFxyXG4gICAgICAgIFswLCAwLCAxLCAwXSxcclxuICAgICAgICBbMCwgMCwgMCwgMV0sXHJcbiAgICAgIF07XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgbSA9PSBcIm9iamVjdFwiICYmIG0ubGVuZ3RoID09IDQpIHRoaXMubSA9IG07XHJcbiAgICBlbHNlIHRoaXMubSA9IG0ubTtcclxuICB9XHJcblxyXG4gIC8vIE1hdHJpeCBkZXRlcm1pbmFudCBjb3VudCBmdW5jdGlvbi5cclxuICBkZXRlcm0oKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICB0aGlzLm1bMF1bMF0gKlxyXG4gICAgICAgIG1hdDNEZXRlcm0oXHJcbiAgICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bMV1bMl0sXHJcbiAgICAgICAgICB0aGlzLm1bMV1bM10sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bMl0sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bM10sXHJcbiAgICAgICAgICB0aGlzLm1bM11bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bM11bMl0sXHJcbiAgICAgICAgICB0aGlzLm1bM11bM11cclxuICAgICAgICApICtcclxuICAgICAgLXRoaXMubVswXVsxXSAqXHJcbiAgICAgICAgbWF0M0RldGVybShcclxuICAgICAgICAgIHRoaXMubVsxXVswXSxcclxuICAgICAgICAgIHRoaXMubVsxXVsyXSxcclxuICAgICAgICAgIHRoaXMubVsxXVszXSxcclxuICAgICAgICAgIHRoaXMubVsyXVswXSxcclxuICAgICAgICAgIHRoaXMubVsyXVsyXSxcclxuICAgICAgICAgIHRoaXMubVsyXVszXSxcclxuICAgICAgICAgIHRoaXMubVszXVswXSxcclxuICAgICAgICAgIHRoaXMubVszXVsyXSxcclxuICAgICAgICAgIHRoaXMubVszXVszXVxyXG4gICAgICAgICkgK1xyXG4gICAgICB0aGlzLm1bMF1bMl0gKlxyXG4gICAgICAgIG1hdDNEZXRlcm0oXHJcbiAgICAgICAgICB0aGlzLm1bMV1bMF0sXHJcbiAgICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bMV1bM10sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bMF0sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bMl1bM10sXHJcbiAgICAgICAgICB0aGlzLm1bM11bMF0sXHJcbiAgICAgICAgICB0aGlzLm1bM11bMV0sXHJcbiAgICAgICAgICB0aGlzLm1bM11bM11cclxuICAgICAgICApICtcclxuICAgICAgLXRoaXMubVswXVszXSAqXHJcbiAgICAgICAgbWF0M0RldGVybShcclxuICAgICAgICAgIHRoaXMubVsxXVswXSxcclxuICAgICAgICAgIHRoaXMubVsxXVsxXSxcclxuICAgICAgICAgIHRoaXMubVsxXVsyXSxcclxuICAgICAgICAgIHRoaXMubVsyXVswXSxcclxuICAgICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICAgIHRoaXMubVsyXVsyXSxcclxuICAgICAgICAgIHRoaXMubVszXVswXSxcclxuICAgICAgICAgIHRoaXMubVszXVsxXSxcclxuICAgICAgICAgIHRoaXMubVszXVsyXVxyXG4gICAgICAgIClcclxuICAgICk7XHJcbiAgfSAvLyBFbmQgb2YgJ2RldGVybScgZnVuY3Rpb25cclxuXHJcbiAgLyoqXHJcbiAgICogTWF0cml4IG11bHRpcGx5IGZ1bmN0aW9uIGdyb3VwXHJcbiAgICovXHJcblxyXG4gIG11bChtKSB7XHJcbiAgICBsZXQgciA9IG1hdDQoKTtcclxuXHJcbiAgICByLm1bMF1bMF0gPVxyXG4gICAgICB0aGlzLm1bMF1bMF0gKiBtLm1bMF1bMF0gK1xyXG4gICAgICB0aGlzLm1bMF1bMV0gKiBtLm1bMV1bMF0gK1xyXG4gICAgICB0aGlzLm1bMF1bMl0gKiBtLm1bMl1bMF0gK1xyXG4gICAgICB0aGlzLm1bMF1bM10gKiBtLm1bM11bMF07XHJcbiAgICByLm1bMF1bMV0gPVxyXG4gICAgICB0aGlzLm1bMF1bMF0gKiBtLm1bMF1bMV0gK1xyXG4gICAgICB0aGlzLm1bMF1bMV0gKiBtLm1bMV1bMV0gK1xyXG4gICAgICB0aGlzLm1bMF1bMl0gKiBtLm1bMl1bMV0gK1xyXG4gICAgICB0aGlzLm1bMF1bM10gKiBtLm1bM11bMV07XHJcbiAgICByLm1bMF1bMl0gPVxyXG4gICAgICB0aGlzLm1bMF1bMF0gKiBtLm1bMF1bMl0gK1xyXG4gICAgICB0aGlzLm1bMF1bMV0gKiBtLm1bMV1bMl0gK1xyXG4gICAgICB0aGlzLm1bMF1bMl0gKiBtLm1bMl1bMl0gK1xyXG4gICAgICB0aGlzLm1bMF1bM10gKiBtLm1bM11bMl07XHJcbiAgICByLm1bMF1bM10gPVxyXG4gICAgICB0aGlzLm1bMF1bMF0gKiBtLm1bMF1bM10gK1xyXG4gICAgICB0aGlzLm1bMF1bMV0gKiBtLm1bMV1bM10gK1xyXG4gICAgICB0aGlzLm1bMF1bMl0gKiBtLm1bMl1bM10gK1xyXG4gICAgICB0aGlzLm1bMF1bM10gKiBtLm1bM11bM107XHJcblxyXG4gICAgci5tWzFdWzBdID1cclxuICAgICAgdGhpcy5tWzFdWzBdICogbS5tWzBdWzBdICtcclxuICAgICAgdGhpcy5tWzFdWzFdICogbS5tWzFdWzBdICtcclxuICAgICAgdGhpcy5tWzFdWzJdICogbS5tWzJdWzBdICtcclxuICAgICAgdGhpcy5tWzFdWzNdICogbS5tWzNdWzBdO1xyXG4gICAgci5tWzFdWzFdID1cclxuICAgICAgdGhpcy5tWzFdWzBdICogbS5tWzBdWzFdICtcclxuICAgICAgdGhpcy5tWzFdWzFdICogbS5tWzFdWzFdICtcclxuICAgICAgdGhpcy5tWzFdWzJdICogbS5tWzJdWzFdICtcclxuICAgICAgdGhpcy5tWzFdWzNdICogbS5tWzNdWzFdO1xyXG4gICAgci5tWzFdWzJdID1cclxuICAgICAgdGhpcy5tWzFdWzBdICogbS5tWzBdWzJdICtcclxuICAgICAgdGhpcy5tWzFdWzFdICogbS5tWzFdWzJdICtcclxuICAgICAgdGhpcy5tWzFdWzJdICogbS5tWzJdWzJdICtcclxuICAgICAgdGhpcy5tWzFdWzNdICogbS5tWzNdWzJdO1xyXG4gICAgci5tWzFdWzNdID1cclxuICAgICAgdGhpcy5tWzFdWzBdICogbS5tWzBdWzNdICtcclxuICAgICAgdGhpcy5tWzFdWzFdICogbS5tWzFdWzNdICtcclxuICAgICAgdGhpcy5tWzFdWzJdICogbS5tWzJdWzNdICtcclxuICAgICAgdGhpcy5tWzFdWzNdICogbS5tWzNdWzNdO1xyXG5cclxuICAgIHIubVsyXVswXSA9XHJcbiAgICAgIHRoaXMubVsyXVswXSAqIG0ubVswXVswXSArXHJcbiAgICAgIHRoaXMubVsyXVsxXSAqIG0ubVsxXVswXSArXHJcbiAgICAgIHRoaXMubVsyXVsyXSAqIG0ubVsyXVswXSArXHJcbiAgICAgIHRoaXMubVsyXVszXSAqIG0ubVszXVswXTtcclxuICAgIHIubVsyXVsxXSA9XHJcbiAgICAgIHRoaXMubVsyXVswXSAqIG0ubVswXVsxXSArXHJcbiAgICAgIHRoaXMubVsyXVsxXSAqIG0ubVsxXVsxXSArXHJcbiAgICAgIHRoaXMubVsyXVsyXSAqIG0ubVsyXVsxXSArXHJcbiAgICAgIHRoaXMubVsyXVszXSAqIG0ubVszXVsxXTtcclxuICAgIHIubVsyXVsyXSA9XHJcbiAgICAgIHRoaXMubVsyXVswXSAqIG0ubVswXVsyXSArXHJcbiAgICAgIHRoaXMubVsyXVsxXSAqIG0ubVsxXVsyXSArXHJcbiAgICAgIHRoaXMubVsyXVsyXSAqIG0ubVsyXVsyXSArXHJcbiAgICAgIHRoaXMubVsyXVszXSAqIG0ubVszXVsyXTtcclxuICAgIHIubVsyXVszXSA9XHJcbiAgICAgIHRoaXMubVsyXVswXSAqIG0ubVswXVszXSArXHJcbiAgICAgIHRoaXMubVsyXVsxXSAqIG0ubVsxXVszXSArXHJcbiAgICAgIHRoaXMubVsyXVsyXSAqIG0ubVsyXVszXSArXHJcbiAgICAgIHRoaXMubVsyXVszXSAqIG0ubVszXVszXTtcclxuXHJcbiAgICByLm1bM11bMF0gPVxyXG4gICAgICB0aGlzLm1bM11bMF0gKiBtLm1bMF1bMF0gK1xyXG4gICAgICB0aGlzLm1bM11bMV0gKiBtLm1bMV1bMF0gK1xyXG4gICAgICB0aGlzLm1bM11bMl0gKiBtLm1bMl1bMF0gK1xyXG4gICAgICB0aGlzLm1bM11bM10gKiBtLm1bM11bMF07XHJcbiAgICByLm1bM11bMV0gPVxyXG4gICAgICB0aGlzLm1bM11bMF0gKiBtLm1bMF1bMV0gK1xyXG4gICAgICB0aGlzLm1bM11bMV0gKiBtLm1bMV1bMV0gK1xyXG4gICAgICB0aGlzLm1bM11bMl0gKiBtLm1bMl1bMV0gK1xyXG4gICAgICB0aGlzLm1bM11bM10gKiBtLm1bM11bMV07XHJcbiAgICByLm1bM11bMl0gPVxyXG4gICAgICB0aGlzLm1bM11bMF0gKiBtLm1bMF1bMl0gK1xyXG4gICAgICB0aGlzLm1bM11bMV0gKiBtLm1bMV1bMl0gK1xyXG4gICAgICB0aGlzLm1bM11bMl0gKiBtLm1bMl1bMl0gK1xyXG4gICAgICB0aGlzLm1bM11bM10gKiBtLm1bM11bMl07XHJcbiAgICByLm1bM11bM10gPVxyXG4gICAgICB0aGlzLm1bM11bMF0gKiBtLm1bMF1bM10gK1xyXG4gICAgICB0aGlzLm1bM11bMV0gKiBtLm1bMV1bM10gK1xyXG4gICAgICB0aGlzLm1bM11bMl0gKiBtLm1bMl1bM10gK1xyXG4gICAgICB0aGlzLm1bM11bM10gKiBtLm1bM11bM107XHJcblxyXG4gICAgcmV0dXJuIHI7XHJcbiAgfSAvLyBFbmQgb2YgJ211bCcgZnVjbnRpb24uXHJcblxyXG4gIG11bDMobTEsIG0yKSB7XHJcbiAgICByZXR1cm4gdGhpcy5tdWwobTEubXVsKG0yKSk7XHJcbiAgfVxyXG5cclxuICBtdWw0KG0xLCBtMiwgbTMpIHtcclxuICAgIHJldHVybiB0aGlzLm11bChtMS5tdWwzKG0yLCBtMykpO1xyXG4gIH1cclxuXHJcbiAgbXVsNShtMSwgbTIsIG0zLCBtNCkge1xyXG4gICAgcmV0dXJuIHRoaXMubXVsKG0xLm11bDQobTIsIG0zLCBtNCkpO1xyXG4gIH1cclxuXHJcbiAgbXVsNihtMSwgbTIsIG0zLCBtNCwgbTUpIHtcclxuICAgIHJldHVybiB0aGlzLm11bChtMS5tdWw1KG0yLCBtMywgbTQsIG01KSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBNYXRyaXggaW52ZXJzZSBmdW5jdGlvbi5cclxuICAgKiBBUkdVTUVOVFM6IE5vbmUuXHJcbiAgICogUkVUVVJOUzogTm9uZS5cclxuICAgKi9cclxuICBpbnZlcnNlKCkge1xyXG4gICAgbGV0IHIgPSBtYXQ0KCk7XHJcbiAgICBsZXQgZGV0ID0gdGhpcy5kZXRlcm0oKTtcclxuXHJcbiAgICBpZiAoZGV0ID09IDApIHJldHVybiByO1xyXG5cclxuICAgIHIubVswXVswXSA9XHJcbiAgICAgICttYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVsxXVsxXSxcclxuICAgICAgICB0aGlzLm1bMV1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzNdLFxyXG4gICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICB0aGlzLm1bMl1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzNdLFxyXG4gICAgICAgIHRoaXMubVszXVsxXSxcclxuICAgICAgICB0aGlzLm1bM11bMl0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzNdXHJcbiAgICAgICkgLyBkZXQ7XHJcbiAgICByLm1bMV1bMF0gPVxyXG4gICAgICAtbWF0M0RldGVybShcclxuICAgICAgICB0aGlzLm1bMV1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzJdLFxyXG4gICAgICAgIHRoaXMubVsxXVszXSxcclxuICAgICAgICB0aGlzLm1bMl1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzJdLFxyXG4gICAgICAgIHRoaXMubVsyXVszXSxcclxuICAgICAgICB0aGlzLm1bM11bMF0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzJdLFxyXG4gICAgICAgIHRoaXMubVszXVszXVxyXG4gICAgICApIC8gZGV0O1xyXG4gICAgci5tWzJdWzBdID1cclxuICAgICAgK21hdDNEZXRlcm0oXHJcbiAgICAgICAgdGhpcy5tWzFdWzBdLFxyXG4gICAgICAgIHRoaXMubVsxXVsxXSxcclxuICAgICAgICB0aGlzLm1bMV1bM10sXHJcbiAgICAgICAgdGhpcy5tWzJdWzBdLFxyXG4gICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICB0aGlzLm1bMl1bM10sXHJcbiAgICAgICAgdGhpcy5tWzNdWzBdLFxyXG4gICAgICAgIHRoaXMubVszXVsxXSxcclxuICAgICAgICB0aGlzLm1bM11bM11cclxuICAgICAgKSAvIGRldDtcclxuICAgIHIubVszXVswXSA9XHJcbiAgICAgICttYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVsxXVswXSxcclxuICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzJdLFxyXG4gICAgICAgIHRoaXMubVsyXVswXSxcclxuICAgICAgICB0aGlzLm1bMl1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzJdLFxyXG4gICAgICAgIHRoaXMubVszXVswXSxcclxuICAgICAgICB0aGlzLm1bM11bMV0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzJdXHJcbiAgICAgICkgLyBkZXQ7XHJcblxyXG4gICAgci5tWzBdWzFdID1cclxuICAgICAgK21hdDNEZXRlcm0oXHJcbiAgICAgICAgdGhpcy5tWzBdWzFdLFxyXG4gICAgICAgIHRoaXMubVswXVsyXSxcclxuICAgICAgICB0aGlzLm1bMF1bM10sXHJcbiAgICAgICAgdGhpcy5tWzJdWzFdLFxyXG4gICAgICAgIHRoaXMubVsyXVsyXSxcclxuICAgICAgICB0aGlzLm1bMl1bM10sXHJcbiAgICAgICAgdGhpcy5tWzNdWzFdLFxyXG4gICAgICAgIHRoaXMubVszXVsyXSxcclxuICAgICAgICB0aGlzLm1bM11bM11cclxuICAgICAgKSAvIGRldDtcclxuICAgIHIubVsxXVsxXSA9XHJcbiAgICAgIC1tYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVswXVswXSxcclxuICAgICAgICB0aGlzLm1bMF1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzNdLFxyXG4gICAgICAgIHRoaXMubVsyXVswXSxcclxuICAgICAgICB0aGlzLm1bMl1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzNdLFxyXG4gICAgICAgIHRoaXMubVszXVswXSxcclxuICAgICAgICB0aGlzLm1bM11bMl0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzNdXHJcbiAgICAgICkgLyBkZXQ7XHJcbiAgICByLm1bMl1bMV0gPVxyXG4gICAgICArbWF0M0RldGVybShcclxuICAgICAgICB0aGlzLm1bMF1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzFdLFxyXG4gICAgICAgIHRoaXMubVswXVszXSxcclxuICAgICAgICB0aGlzLm1bMl1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzFdLFxyXG4gICAgICAgIHRoaXMubVsyXVszXSxcclxuICAgICAgICB0aGlzLm1bM11bMF0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzFdLFxyXG4gICAgICAgIHRoaXMubVszXVszXVxyXG4gICAgICApIC8gZGV0O1xyXG4gICAgci5tWzNdWzFdID1cclxuICAgICAgK21hdDNEZXRlcm0oXHJcbiAgICAgICAgdGhpcy5tWzBdWzBdLFxyXG4gICAgICAgIHRoaXMubVswXVsxXSxcclxuICAgICAgICB0aGlzLm1bMF1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzBdLFxyXG4gICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICB0aGlzLm1bMl1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzBdLFxyXG4gICAgICAgIHRoaXMubVszXVsxXSxcclxuICAgICAgICB0aGlzLm1bM11bMl1cclxuICAgICAgKSAvIGRldDtcclxuXHJcbiAgICByLm1bMF1bMl0gPVxyXG4gICAgICArbWF0M0RldGVybShcclxuICAgICAgICB0aGlzLm1bMF1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzJdLFxyXG4gICAgICAgIHRoaXMubVswXVszXSxcclxuICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzJdLFxyXG4gICAgICAgIHRoaXMubVsxXVszXSxcclxuICAgICAgICB0aGlzLm1bM11bMV0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzJdLFxyXG4gICAgICAgIHRoaXMubVszXVszXVxyXG4gICAgICApIC8gZGV0O1xyXG4gICAgci5tWzFdWzJdID1cclxuICAgICAgLW1hdDNEZXRlcm0oXHJcbiAgICAgICAgdGhpcy5tWzBdWzBdLFxyXG4gICAgICAgIHRoaXMubVswXVsyXSxcclxuICAgICAgICB0aGlzLm1bMF1bM10sXHJcbiAgICAgICAgdGhpcy5tWzFdWzBdLFxyXG4gICAgICAgIHRoaXMubVsxXVsyXSxcclxuICAgICAgICB0aGlzLm1bMV1bM10sXHJcbiAgICAgICAgdGhpcy5tWzNdWzBdLFxyXG4gICAgICAgIHRoaXMubVszXVsyXSxcclxuICAgICAgICB0aGlzLm1bM11bM11cclxuICAgICAgKSAvIGRldDtcclxuICAgIHIubVsyXVsyXSA9XHJcbiAgICAgICttYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVswXVswXSxcclxuICAgICAgICB0aGlzLm1bMF1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzNdLFxyXG4gICAgICAgIHRoaXMubVsxXVswXSxcclxuICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzNdLFxyXG4gICAgICAgIHRoaXMubVszXVswXSxcclxuICAgICAgICB0aGlzLm1bM11bMV0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzNdXHJcbiAgICAgICkgLyBkZXQ7XHJcbiAgICByLm1bM11bMl0gPVxyXG4gICAgICArbWF0M0RldGVybShcclxuICAgICAgICB0aGlzLm1bMF1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzFdLFxyXG4gICAgICAgIHRoaXMubVswXVsyXSxcclxuICAgICAgICB0aGlzLm1bMV1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzFdLFxyXG4gICAgICAgIHRoaXMubVsxXVsyXSxcclxuICAgICAgICB0aGlzLm1bM11bMF0sXHJcbiAgICAgICAgdGhpcy5tWzNdWzFdLFxyXG4gICAgICAgIHRoaXMubVszXVsyXVxyXG4gICAgICApIC8gZGV0O1xyXG5cclxuICAgIHIubVswXVszXSA9XHJcbiAgICAgICttYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVswXVsxXSxcclxuICAgICAgICB0aGlzLm1bMF1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzNdLFxyXG4gICAgICAgIHRoaXMubVsxXVsxXSxcclxuICAgICAgICB0aGlzLm1bMV1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzNdLFxyXG4gICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICB0aGlzLm1bMl1bMl0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzNdXHJcbiAgICAgICkgLyBkZXQ7XHJcbiAgICByLm1bMV1bM10gPVxyXG4gICAgICAtbWF0M0RldGVybShcclxuICAgICAgICB0aGlzLm1bMF1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzJdLFxyXG4gICAgICAgIHRoaXMubVswXVszXSxcclxuICAgICAgICB0aGlzLm1bMV1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzJdLFxyXG4gICAgICAgIHRoaXMubVsxXVszXSxcclxuICAgICAgICB0aGlzLm1bMl1bMF0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzJdLFxyXG4gICAgICAgIHRoaXMubVsyXVszXVxyXG4gICAgICApIC8gZGV0O1xyXG4gICAgci5tWzJdWzNdID1cclxuICAgICAgK21hdDNEZXRlcm0oXHJcbiAgICAgICAgdGhpcy5tWzBdWzBdLFxyXG4gICAgICAgIHRoaXMubVswXVsxXSxcclxuICAgICAgICB0aGlzLm1bMF1bM10sXHJcbiAgICAgICAgdGhpcy5tWzFdWzBdLFxyXG4gICAgICAgIHRoaXMubVsxXVsxXSxcclxuICAgICAgICB0aGlzLm1bMV1bM10sXHJcbiAgICAgICAgdGhpcy5tWzJdWzBdLFxyXG4gICAgICAgIHRoaXMubVsyXVsxXSxcclxuICAgICAgICB0aGlzLm1bMl1bM11cclxuICAgICAgKSAvIGRldDtcclxuICAgIHIubVszXVszXSA9XHJcbiAgICAgICttYXQzRGV0ZXJtKFxyXG4gICAgICAgIHRoaXMubVswXVswXSxcclxuICAgICAgICB0aGlzLm1bMF1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzBdWzJdLFxyXG4gICAgICAgIHRoaXMubVsxXVswXSxcclxuICAgICAgICB0aGlzLm1bMV1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzFdWzJdLFxyXG4gICAgICAgIHRoaXMubVsyXVswXSxcclxuICAgICAgICB0aGlzLm1bMl1bMV0sXHJcbiAgICAgICAgdGhpcy5tWzJdWzJdXHJcbiAgICAgICkgLyBkZXQ7XHJcblxyXG4gICAgcmV0dXJuIHI7XHJcbiAgfSAvLyBFbmQgb2YgJ2ludmVyc2UnIGZ1bmN0aW9uXHJcblxyXG4gIC8qKlxyXG4gICAqIE1hdHJpeCB0cmFuc3Bvc2UgZnVuY3Rpb24uXHJcbiAgICogQVJHVU1FTlRTOiBOb25lLlxyXG4gICAqIEByZXR1cm5zIHRyYW5zcG9zZWQgbWF0cml4LlxyXG4gICAqL1xyXG4gIHRyYW5zcG9zZSgpIHtcclxuICAgIHJldHVybiBtYXQ0KFtcclxuICAgICAgW3RoaXMubVswXVswXSwgdGhpcy5tWzFdWzBdLCB0aGlzLm1bMl1bMF0sIHRoaXMubVszXVswXV0sXHJcbiAgICAgIFt0aGlzLm1bMF1bMV0sIHRoaXMubVsxXVsxXSwgdGhpcy5tWzJdWzFdLCB0aGlzLm1bM11bMV1dLFxyXG4gICAgICBbdGhpcy5tWzBdWzJdLCB0aGlzLm1bMV1bMl0sIHRoaXMubVsyXVsyXSwgdGhpcy5tWzNdWzJdXSxcclxuICAgICAgW3RoaXMubVswXVszXSwgdGhpcy5tWzFdWzNdLCB0aGlzLm1bMl1bM10sIHRoaXMubVszXVszXV0sXHJcbiAgICBdKTtcclxuICB9XHJcbn0gLy8gRW5kIG9mICdfbWF0NCcgY2xhc3MuXHJcblxyXG4vKipcclxuICogTWF0cml4IHNldCB0byByb3RhdGUgYnkgYXJiaXRyYXR5IHZlY3RvciBmdW5jdGlvbi5cclxuICogQHBhcmFtIHsqZmxvYXR9IGFuZ2xlIGluIGRlZ3JlZXMuXHJcbiAqIEBwYXJhbSB7KnZlYzN9IHZleHRvciB2YXJiaXRyYXJ5LlxyXG4gKiBAcmV0dXJucyB7Km1hdDR9IHJlc3VsdCBtYXRyaXguXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0NFJvdGF0ZShhbmdsZSwgdmVjdG9yKSB7XHJcbiAgbGV0IGEgPSBEMlIoYW5nbGUpLFxyXG4gICAgc2kgPSBNYXRoLnNpbihhKSxcclxuICAgIGNvID0gTWF0aC5jb3MoYSk7XHJcblxyXG4gIGxldCB2ID0gdmVjdG9yLm5vcm1hbGl6ZSgpO1xyXG5cclxuICByZXR1cm4gbWF0NChbXHJcbiAgICBbXHJcbiAgICAgIGNvICsgdi54ICogdi54ICogKDEgLSBjbyksXHJcbiAgICAgIHYueSAqIHYueCAqICgxIC0gY28pIC0gdi56ICogc2ksXHJcbiAgICAgIHYueiAqIHYueCAqICgxIC0gY28pICsgdi55ICogc2ksXHJcbiAgICAgIDAsXHJcbiAgICBdLFxyXG4gICAgW1xyXG4gICAgICB2LnggKiB2LnkgKiAoMSAtIGNvKSArIHYueiAqIHNpLFxyXG4gICAgICBjbyArIHYueSAqIHYueSAqICgxIC0gY28pLFxyXG4gICAgICB2LnogKiB2LnkgKiAoMSAtIGNvKSAtIHYueCAqIHNpLFxyXG4gICAgICAwLFxyXG4gICAgXSxcclxuICAgIFtcclxuICAgICAgdi54ICogdi56ICogKDEgLSBjbykgLSB2LnkgKiBzaSxcclxuICAgICAgdi55ICogdi56ICogKDEgLSBjbykgKyB2LnggKiBzaSxcclxuICAgICAgY28gKyB2LnogKiB2LnogKiAoMSAtIGNvKSxcclxuICAgICAgMCxcclxuICAgIF0sXHJcbiAgICBbMCwgMCwgMCwgMV0sXHJcbiAgXSk7XHJcbn0gLy8gRW5kIG9mICdtYXQ0Um90YXRlJyBmdW5jdGlvbi5cclxuXHJcbi8qKlxyXG4gKiBSb3RhdGUgeCBtYXRyaXggY3JlYXRlIGZ1bmN0aW9uLlxyXG4gKiBAcGFyYW0geypmbG9hdH0gYW5nbGUgaW4gZGVncmVlc1xyXG4gKiBAcmV0dXJucyB7Km1hdDR9IHJlc3VsdCBtYXRyaXguXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0NFJvdGF0ZVgoYW5nbGUpIHtcclxuICBsZXQgYSA9IEQyUihhbmdsZSksXHJcbiAgICBzaSA9IE1hdGguc2luKGEpLFxyXG4gICAgY28gPSBNYXRoLmNvcyhhKTtcclxuXHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgWzEsIDAsIDAsIDBdLFxyXG4gICAgWzAsIGNvLCBzaSwgMF0sXHJcbiAgICBbMCwgLXNpLCBjbywgMF0sXHJcbiAgICBbMCwgMCwgMCwgMV0sXHJcbiAgXSk7XHJcbn0gLy8gRW5kIG9mICdtYXQ0Um90YXRlWCcgZnVuY3Rpb24uXHJcblxyXG4vKipcclxuICogUm90YXRlIHkgbWF0cml4IGNyZWF0ZSBmdW5jdGlvbi5cclxuICogQHBhcmFtIHsqZmxvYXR9IGFuZ2xlIGluIGRlZ3JlZVxyXG4gKiBAcmV0dXJucyB7Km1hdDR9IHJlc3VsdCBtYXRyaXguXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0NFJvdGF0ZVkoYW5nbGUpIHtcclxuICBsZXQgYSA9IEQyUihhbmdsZSksXHJcbiAgICBzaSA9IE1hdGguc2luKGEpLFxyXG4gICAgY28gPSBNYXRoLmNvcyhhKTtcclxuXHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgW2NvLCAwLCAtc2ksIDBdLFxyXG4gICAgWzAsIDEsIDAsIDBdLFxyXG4gICAgW3NpLCAwLCBjbywgMF0sXHJcbiAgICBbMCwgMCwgMCwgMV0sXHJcbiAgXSk7XHJcbn0gLy8gRW5kIG9mICdtYXQ0Um90YXRlWScgZnVuY3Rpb24uXHJcblxyXG4vKipcclxuICogUm90YXRlIHogbWF0cml4IGNyZWF0ZSBmdW5jdGlvbi5cclxuICogQHBhcmFtIHtmbG9hdH0gYW5nbGUgaW4gZGVncmVlc1xyXG4gKiBAcmV0dXJucyB7Km1hdDR9ICByZXN1bHQgbWF0cml4LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1hdDRSb3RhdGVaKGFuZ2xlKSB7XHJcbiAgbGV0IGEgPSBEMlIoYW5nbGUpLFxyXG4gICAgc2kgPSBNYXRoLnNpbihhKSxcclxuICAgIGNvID0gTWF0aC5jb3MoYSk7XHJcblxyXG4gIHJldHVybiBtYXQ0KFtcclxuICAgIFtjbywgc2ksIDAsIDBdLFxyXG4gICAgWy1zaSwgY28sIDAsIDBdLFxyXG4gICAgWzAsIDAsIDEsIDBdLFxyXG4gICAgWzAsIDAsIDAsIDFdLFxyXG4gIF0pO1xyXG59IC8vIEVuZCBvZiAnbWF0NFJvdGF0ZVonIGZ1bmN0aW9uXHJcblxyXG4vKipcclxuICogTWF0cml4IHRvIHZlY3RvciB0cmFuc2xhdGUgZnVuY3Rpb24uXHJcbiAqIEBwYXJhbSB7KnZlYzN9IHYgdHJhbnNsYXRlIHZlY3Rvci5cclxuICogQHJldHVybnMgeyptYXQ0fSByZXN1bHQgdmVjdG9yLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1hdDRUcmFuc2xhdGUodikge1xyXG4gIHJldHVybiBtYXQ0KFtcclxuICAgIFsxLCAwLCAwLCAwXSxcclxuICAgIFswLCAxLCAwLCAwXSxcclxuICAgIFswLCAwLCAxLCAwXSxcclxuICAgIFt2LngsIHYueSwgdi56LCAxXSxcclxuICBdKTtcclxufSAvLyBFbmQgb2YgJ3RyYW5zbGF0ZScgZnVuY3Rpb24uXHJcblxyXG4vKipcclxuICogU2NhbGUgbWF0cml4IGNyZWF0aW9uIGZ1bmN0aW9uLlxyXG4gKiBAcGFyYW0geyp2ZWMzfSB2IHNjYWxlIHZlY3Rvci5cclxuICogQHJldHVybnMgeyptYXQ0fSByZXN1bHQgbWF0cml4LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1hdDRTY2FsZSh2KSB7XHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgW3YueCwgMCwgMCwgMF0sXHJcbiAgICBbMCwgdi55LCAwLCAwXSxcclxuICAgIFswLCAwLCB2LnosIDBdLFxyXG4gICAgWzAsIDAsIDAsIDFdLFxyXG4gIF0pO1xyXG59IC8vIEVuZCBvZiAnbWF0NFNjYWxlIGZ1bmN0aW9uLlxyXG5cclxuLyoqXHJcbiAqIE1hdHJpeCBsb29rLWF0IHZpZXdlciBmdW5jdGlvbi5cclxuICogQHBhcmFtIHsqdmVjM30gbG9jIHZpZXdlciBwb3NpdGlvbi5cclxuICogQHBhcmFtIHsqdmVjM30gYXQgbG9vay1hdCBwb2ludC5cclxuICogQHBhcmFtIHsqdmVjM30gdXAgYXBwcm94aW1hdGUgdXAgZGlyZWN0aW9uLlxyXG4gKiBAcmV0dXJucyB7Km1hdDR9IHJlc3VsdCBtYXRyaXguXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0NFZpZXcobG9jLCBhdCwgdXApIHtcclxuICBsZXQgZGlyID0gYXQuc3ViKGxvYykubm9ybWFsaXplKCksXHJcbiAgICByaWdodCA9IGRpci5jcm9zcyh1cCkubm9ybWFsaXplKCksXHJcbiAgICB1cF9yZWFsID0gcmlnaHQuY3Jvc3MoZGlyKS5ub3JtYWxpemUoKTtcclxuXHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgW3JpZ2h0LngsIHVwX3JlYWwueCwgLWRpci54LCAwXSxcclxuICAgIFtyaWdodC55LCB1cF9yZWFsLnksIC1kaXIueSwgMF0sXHJcbiAgICBbcmlnaHQueiwgdXBfcmVhbC56LCAtZGlyLnosIDBdLFxyXG4gICAgWy1sb2MuZG90KHJpZ2h0KSwgLWxvYy5kb3QodXBfcmVhbCksIGxvYy5kb3QoZGlyKSwgMV0sXHJcbiAgXSk7XHJcbn0gLy8gRW5kIG9mICdtYXQ0VmlldycgZnVuY3Rpb24uXHJcblxyXG4vKipcclxuICogTWF0cml4IGZydXN0dW0gc2V0dXAgZnVuY3Rpb24uXHJcbiAqIEBwYXJhbSB7KmZsb2F0fSBsZWZ0XHJcbiAqIEBwYXJhbSB7KmZsb2F0fSByaWdodFxyXG4gKiBAcGFyYW0geypmbG9hdH0gYm90dG9tXHJcbiAqIEBwYXJhbSB7KmZsb2F0fSB0b3BcclxuICogQHBhcmFtIHsqZmxvYXR9IG5lYXJcclxuICogQHBhcmFtIHsqZmxvYXR9IGZhclxyXG4gKiBAcmV0dXJucyByZXN1bHQgbWF0cml4LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1hdDRGcnVzdHVtKGxlZnQsIHJpZ2h0LCBib3R0b20sIHRvcCwgbmVhciwgZmFyKSB7XHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgWygyICogbmVhcikgLyAocmlnaHQgLSBsZWZ0KSwgMCwgMCwgMF0sXHJcbiAgICBbMCwgKDIgKiBuZWFyKSAvICh0b3AgLSBib3R0b20pLCAwLCAwXSxcclxuICAgIFtcclxuICAgICAgKHJpZ2h0ICsgbGVmdCkgLyAocmlnaHQgLSBsZWZ0KSxcclxuICAgICAgKHRvcCArIGJvdHRvbSkgLyAodG9wIC0gYm90dG9tKSxcclxuICAgICAgLShmYXIgKyBuZWFyKSAvIChmYXIgLSBuZWFyKSxcclxuICAgICAgLTEsXHJcbiAgICBdLFxyXG4gICAgWzAsIDAsIC0oMiAqIG5lYXIgKiBmYXIpIC8gKGZhciAtIG5lYXIpLCAwXSxcclxuICBdKTtcclxufSAvLyBFbmQgb2YgJ21hdDRGcnVzdHVtJyBmdW5jdGlvbi5cclxuXHJcbi8qKlxyXG4gKiBNYXRyaXggb3J0aG8gc2V0dXAgZnVuY3Rpb24uXHJcbiAqIEBwYXJhbSB7KmZsb2F0fSBsZWZ0XHJcbiAqIEBwYXJhbSB7KmZsb2F0fSByaWdodFxyXG4gKiBAcGFyYW0geypmbG9hdH0gYm90dG9tXHJcbiAqIEBwYXJhbSB7KmZsb2F0fSB0b3BcclxuICogQHBhcmFtIHsqZmxvYXR9IG5lYXJcclxuICogQHBhcmFtIHsqZmxvYXR9IGZhclxyXG4gKiBAcmV0dXJucyB7Km1hdDR9IHJlc3VsdCBtYXRyaXguXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0NE9ydGhvKGxlZnQsIHJpZ2h0LCBib3R0b20sIHRvcCwgbmVhciwgZmFyKSB7XHJcbiAgcmV0dXJuIG1hdDQoW1xyXG4gICAgWzIgLyAocmlnaHQgLSBsZWZ0KSwgMCwgMCwgMF0sXHJcbiAgICBbMCwgMiAvICh0b3AgLSBib3R0b20pLCAwLCAwXSxcclxuICAgIFswLCAwLCAtMiAvIChmYXIgLSBuZWFyKSwgMF0sXHJcbiAgICBbXHJcbiAgICAgIC0ocmlnaHQgKyBsZWZ0KSAvIChyaWdodCAtIGxlZnQpLFxyXG4gICAgICAtKHRvcCArIGJvdHRvbSkgLyAodG9wIC0gYm90dG9tKSxcclxuICAgICAgLShmYXIgKyBuZWFyKSAvIChmYXIgLSBuZWFyKSxcclxuICAgICAgMSxcclxuICAgIF0sXHJcbiAgXSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBNYXRyaXggM3gzIGRldGVybWluYW50IGNvdW50IGZ1bmN0aW9uLlxyXG4gKiBAcGFyYW0geyphbnl9IEExMVxyXG4gKiBAcGFyYW0geyphbnl9IEExMlxyXG4gKiBAcGFyYW0geyphbnl9IEExM1xyXG4gKiBAcGFyYW0geyphbnl9IEEyMVxyXG4gKiBAcGFyYW0geyphbnl9IEEyMlxyXG4gKiBAcGFyYW0geyphbnl9IEEyM1xyXG4gKiBAcGFyYW0geyphbnl9IEEzMVxyXG4gKiBAcGFyYW0geyphbnl9IEEzMlxyXG4gKiBAcGFyYW0geyphbnl9IEEzM1xyXG4gKiBAcmV0dXJucyB7KmZsb2F0fSBtYXRyaXggZGV0ZXJtaW5hbnRcclxuICovXHJcbmZ1bmN0aW9uIG1hdDNEZXRlcm0oQTExLCBBMTIsIEExMywgQTIxLCBBMjIsIEEyMywgQTMxLCBBMzIsIEEzMykge1xyXG4gIHJldHVybiAoXHJcbiAgICBBMTEgKiBBMjIgKiBBMzMgK1xyXG4gICAgQTEyICogQTIzICogQTMxICtcclxuICAgIEExMyAqIEEyMSAqIEEzMiAtXHJcbiAgICBBMTEgKiBBMjMgKiBBMzIgLVxyXG4gICAgQTEyICogQTIxICogQTMzIC1cclxuICAgIEExMyAqIEEyMiAqIEEzMVxyXG4gICk7XHJcbn0gLy8gRW5kIG9mICdtYXQzRGV0ZXJtJyBmdW5jdGlvbi5cclxuXHJcbi8qKlxyXG4gKiBNYXRyaXggNHg0IHNldCBmdW5jdGlvbi5cclxuICogQHBhcmFtICB7Li4uYW55fSBtYXRcclxuICogQHJldHVybnNcclxuICovXHJcbmZ1bmN0aW9uIG1hdDQobWF0KSB7XHJcbiAgcmV0dXJuIG5ldyBfbWF0NChtYXQpO1xyXG59XHJcblxyXG4vLyB0ZXN0XHJcbmV4cG9ydCBkZWZhdWx0IG1hdDQ7XHJcbiIsImNsYXNzIF92ZWMzIHtcclxuICBjb25zdHJ1Y3Rvcih4LCB5LCB6KSB7XHJcbiAgICBpZiAoeCA9PSB1bmRlZmluZWQpIHJldHVybiB2ZWMzKDAsIDAsIDApO1xyXG4gICAgZWxzZSBpZiAodHlwZW9mIHggPT0gXCJvYmplY3RcIilcclxuICAgICAgaWYgKGxlbmd0aCh4KSA9PSAzKSAodGhpcy54ID0geFswXSksICh0aGlzLnkgPSB4WzFdKSwgKHRoaXMueiA9IHhbMl0pO1xyXG4gICAgICBlbHNlICh0aGlzLnggPSB4KSwgKHRoaXMueSA9IHkpLCAodGhpcy56ID0geik7XHJcbiAgICBlbHNlIGlmICh5ID09IHVuZGVmaW5lZCB8fCB6ID09IHVuZGVmaW5lZClcclxuICAgICAgKHRoaXMueCA9IHgpLCAodGhpcy55ID0geCksICh0aGlzLnogPSB4KTtcclxuICAgIGVsc2UgKHRoaXMueCA9IHgpLCAodGhpcy55ID0geSksICh0aGlzLnogPSB6KTtcclxuICB9XHJcblxyXG4gIGFkZCh2KSB7XHJcbiAgICBpZiAodiA9PSB1bmRlZmluZWQpIHJldHVybiB2ZWMzKHRoaXMpO1xyXG4gICAgZWxzZSBpZiAodHlwZW9mIHYgPT0gXCJudW1iZXJcIilcclxuICAgICAgcmV0dXJuIHZlYzModGhpcy54ICsgdiwgdGhpcy55ICsgdiwgdGhpcy56ICsgdik7XHJcbiAgICBlbHNlIHJldHVybiB2ZWMzKHRoaXMueCArIHYueCwgdGhpcy55ICsgdi55LCB0aGlzLnogKyB2LnopO1xyXG4gIH1cclxuXHJcbiAgYWRkMyh1LCB2KSB7XHJcbiAgICByZXR1cm4gdGhpcy5hZGQodS5hZGQodikpO1xyXG4gIH1cclxuXHJcbiAgYWRkNCh1LCB2LCBuKSB7XHJcbiAgICByZXR1cm4gdGhpcy5hZGQodS5hZGQzKHYsIG4pKTtcclxuICB9XHJcblxyXG4gIHN1Yih2KSB7XHJcbiAgICBpZiAodiA9PSB1bmRlZmluZWQpIHJldHVybiB2ZWMzKHRoaXMpO1xyXG4gICAgZWxzZSBpZiAodHlwZW9mIHYgPT0gXCJudW1iZXJcIilcclxuICAgICAgcmV0dXJuIHZlYzModGhpcy54IC0gdiwgdGhpcy55IC0gdiwgdGhpcy56IC0gdik7XHJcblxyXG4gICAgcmV0dXJuIHZlYzModGhpcy54IC0gdi54LCB0aGlzLnkgLSB2LnksIHRoaXMueiAtIHYueik7XHJcbiAgfVxyXG5cclxuICBtdWwoeCkge1xyXG4gICAgaWYgKHggPT0gdW5kZWZpbmVkKSByZXR1cm4gdmVjMyh0aGlzKTtcclxuICAgIGVsc2UgaWYgKHR5cGVvZiB4ID09IFwibnVtYmVyXCIpXHJcbiAgICAgIHJldHVybiB2ZWMzKHRoaXMueCAqIHgsIHRoaXMueSAqIHgsIHRoaXMueiAqIHgpO1xyXG4gICAgZWxzZSBpZiAodHlwZW9mIHggPT0gXCJvYmplY3RcIilcclxuICAgICAgcmV0dXJuIHZlYzModGhpcy54ICogeFswXSwgdGhpcy55ICogeFswXSwgdGhpcy56ICogeFswXSk7XHJcbiAgfVxyXG5cclxuICBkaXYoeCkge1xyXG4gICAgaWYgKHggPT0gdW5kZWZpbmVkKSByZXR1cm4gdmVjMyh0aGlzKTtcclxuICAgIGVsc2UgaWYgKHR5cGVvZiB4ID09IFwibnVtYmVyXCIpXHJcbiAgICAgIHJldHVybiB2ZWMzKHRoaXMueCAvIHgsIHRoaXMueSAvIHgsIHRoaXMueiAvIHgpO1xyXG4gICAgZWxzZSBpZiAodHlwZW9mIHggPT0gXCJvYmplY3RcIilcclxuICAgICAgcmV0dXJuIHZlYzModGhpcy54IC8geFswXSwgdGhpcy55IC8geFswXSwgdGhpcy56IC8geFswXSk7XHJcbiAgfVxyXG5cclxuICBuZWcoKSB7XHJcbiAgICByZXR1cm4gdmVjMygtdGhpcy54LCAtdGhpcy55LCAtdGhpcy56KTtcclxuICB9XHJcblxyXG4gIGRvdCh2KSB7XHJcbiAgICBpZiAodiA9PSB1bmRlZmluZWQpIHJldHVybiB0aGlzLmRvdCh0aGlzKTtcclxuXHJcbiAgICBpZiAodHlwZW9mIHYgPT0gXCJudW1iZXJcIikgcmV0dXJuIHRoaXMueCAqIHYgKyB0aGlzLnkgKiB2ICsgdGhpcy56ICogdjtcclxuXHJcbiAgICByZXR1cm4gdGhpcy54ICogdi54ICsgdGhpcy55ICogdi55ICsgdGhpcy56ICogdi56O1xyXG4gIH1cclxuXHJcbiAgbGVuKCkge1xyXG4gICAgbGV0IGwgPSB0aGlzLmRvdCgpO1xyXG5cclxuICAgIGlmIChsID09IDEgfHwgbCA9PSAwKSByZXR1cm4gbDtcclxuXHJcbiAgICByZXR1cm4gTWF0aC5zcXJ0KGwpO1xyXG4gIH1cclxuXHJcbiAgbm9ybWFsaXplKCkge1xyXG4gICAgbGV0IGwgPSB0aGlzLmxlbigpO1xyXG5cclxuICAgIGlmIChsID09IDEgfHwgbCA9PSAwKSByZXR1cm4gdmVjMyh0aGlzKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5kaXYobCk7XHJcbiAgfVxyXG5cclxuICBjcm9zcyh2KSB7XHJcbiAgICBpZiAodiA9PSB1bmRlZmluZWQpIHJldHVybiB2ZWMzKHRoaXMpO1xyXG4gICAgaWYgKHR5cGVvZiB2ID09IFwibnVtYmVyXCIpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY3Jvc3ModmVjMyh2KSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHZlYzMoXHJcbiAgICAgIHRoaXMueSAqIHYueiAtIHRoaXMueiAqIHYueSxcclxuICAgICAgdGhpcy56ICogdi54IC0gdGhpcy54ICogdi56LFxyXG4gICAgICB0aGlzLnggKiB2LnkgLSB0aGlzLnkgKiB2LnhcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICB0cmFuc2Zvcm0obSkge1xyXG4gICAgcmV0dXJuIHZlYzMoXHJcbiAgICAgIHRoaXMueCAqIG0ubVswXVswXSArIHRoaXMueSAqIG0ubVsxXVswXSArIHRoaXMueiAqIG0ubVsyXVswXSxcclxuICAgICAgdGhpcy54ICogbS5tWzBdWzFdICsgdGhpcy55ICogbS5tWzFdWzFdICsgdGhpcy56ICogbS5tWzJdWzFdLFxyXG4gICAgICB0aGlzLnggKiBtLm1bMF1bMl0gKyB0aGlzLnkgKiBtLm1bMV1bMl0gKyB0aGlzLnogKiBtLm1bMl1bMl1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBtdWxNYXRyKG0pIHtcclxuICAgIGxldCB3ID1cclxuICAgICAgdGhpcy54ICogbS5tWzBdWzNdICsgdGhpcy55ICogbS5tWzFdWzNdICsgdGhpcy56ICogbS5tWzJdWzNdICsgbS5tWzNdWzNdO1xyXG5cclxuICAgIHJldHVybiB2ZWMzKFxyXG4gICAgICB0aGlzLnggKiBtLm1bMF1bMF0gKyB0aGlzLnkgKiBtLm1bMV1bMF0gKyB0aGlzLnogKiBtLm1bMl1bMF0gKyBtLm1bM11bMF0sXHJcbiAgICAgIHRoaXMueCAqIG0ubVswXVsxXSArIHRoaXMueSAqIG0ubVsxXVsxXSArIHRoaXMueiAqIG0ubVsyXVsxXSArIG0ubVszXVsxXSxcclxuICAgICAgdGhpcy54ICogbS5tWzBdWzJdICsgdGhpcy55ICogbS5tWzFdWzJdICsgdGhpcy56ICogbS5tWzJdWzJdICsgbS5tWzNdWzJdXHJcbiAgICApLmRpdih3KTtcclxuICB9XHJcblxyXG4gIHBvaW50VHJhbnNmb3JtKG0pIHtcclxuICAgIHJldHVybiB2ZWMzKFxyXG4gICAgICB0aGlzLnggKiBtLm1bMF1bMF0gKyB0aGlzLnkgKiBtLm1bMV1bMF0gKyB0aGlzLnogKiBtLm1bMl1bMF0gKyBtLm1bM11bMF0sXHJcbiAgICAgIHRoaXMueCAqIG0ubVswXVsxXSArIHRoaXMueSAqIG0ubVsxXVsxXSArIHRoaXMueiAqIG0ubVsyXVsxXSArIG0ubVszXVsxXSxcclxuICAgICAgdGhpcy54ICogbS5tWzBdWzJdICsgdGhpcy55ICogbS5tWzFdWzJdICsgdGhpcy56ICogbS5tWzJdWzJdICsgbS5tWzNdWzJdXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIDNEIHZlY3RvciBzZXQgZnVuY3Rpb24uXHJcbiAqIEBwYXJhbSAgey4uLmFueX0gYXJnc1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gdmVjMyguLi5hcmdzKSB7XHJcbiAgcmV0dXJuIG5ldyBfdmVjMyguLi5hcmdzKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgdmVjMztcclxuIiwiaW1wb3J0IHZlYzMgZnJvbSBcIi4uLy4uL210aC9tdGhfdmVjM1wiO1xyXG5pbXBvcnQgbWF0NCBmcm9tIFwiLi4vLi4vbXRoL210aF9tYXQ0XCI7XHJcblxyXG5jbGFzcyBfdmVydGV4IHtcclxuICBjb25zdHJ1Y3Rvcihwb3MsIG5vcm0pIHtcclxuICAgIHRoaXMucG9zID0gcG9zO1xyXG4gICAgaWYgKG5vcm0gIT0gdW5kZWZpbmVkKSB0aGlzLm5vcm0gPSBub3JtO1xyXG4gICAgZWxzZSB0aGlzLm5vcm0gPSB2ZWMzKCk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogU2V0IHZlcnRleCBmdW5jdGlvbi5cclxuICogQHBhcmFtIHsqdmVjM30gcG9zXHJcbiAqIEBwYXJhbSB7KnZlYzN9IG5vcm0gKGNhbiBiZSB1bmRlZmluZWQpXHJcbiAqIEByZXR1cm5zIHsqdmVydGV4fSByZXN1bHQgdmVydGV4LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHZlcnRleChwb3MsIG5vcm0pIHtcclxuICByZXR1cm4gbmV3IF92ZXJ0ZXgocG9zLCBub3JtKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvdW50IG5vcm1hbHMgZnVuY3Rpb24uXHJcbiAqIEBwYXJhbSB7Kn0gdmVydHNcclxuICogQHBhcmFtIHsqfSBpbmRleGVzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY291bnROb3JtYWxzKHZlcnRzLCBpbmRleGVzKSB7XHJcbiAgLy8gUmVzZXQgbm9ybWFscy5cclxuICBmb3IgKGxldCBpIGluIHZlcnRzKSB2ZXJ0c1tpXS5ub3JtID0gdmVjMygpO1xyXG5cclxuICAvLyBGb3IgZXZlcnkgZmFjZXQgY291bnQgbm9ybWFsc11cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGV4ZXMubGVuZ3RoOyBpICs9IDMpIHtcclxuICAgIGxldCBuMCA9IGluZGV4ZXNbaV0sXHJcbiAgICAgIG4xID0gaW5kZXhlc1tpICsgMV0sXHJcbiAgICAgIG4yID0gaW5kZXhlc1tpICsgMl07XHJcbiAgICBsZXQgcDAgPSB2ZXJ0c1tuMF0ucG9zLFxyXG4gICAgICBwMSA9IHZlcnRzW24xXS5wb3MsXHJcbiAgICAgIHAyID0gdmVydHNbbjJdLnBvcyxcclxuICAgICAgTiA9IHAxLnN1YihwMCkuY3Jvc3MocDIuc3ViKHAwKSkubm9ybWFsaXplKCk7XHJcblxyXG4gICAgdmVydHNbbjBdLm5vcm0gPSB2ZXJ0c1tuMF0ubm9ybS5hZGQoTik7XHJcbiAgICB2ZXJ0c1tuMV0ubm9ybSA9IHZlcnRzW24xXS5ub3JtLmFkZChOKTtcclxuICAgIHZlcnRzW24yXS5ub3JtID0gdmVydHNbbjJdLm5vcm0uYWRkKE4pO1xyXG4gIH1cclxuXHJcbiAgZm9yIChsZXQgaSBpbiB2ZXJ0cykgdmVydHNbaV0ubm9ybSA9IHZlcnRzW2ldLm5vcm0ubm9ybWFsaXplKCk7XHJcbn1cclxuXHJcbmNsYXNzIF9wcmltaXRpdmUge1xyXG4gIGNvbnN0cnVjdG9yKHJuZCwgdmVydHMsIGluZHMpIHtcclxuICAgIGxldCB2dHRzID0gW10sXHJcbiAgICAgIGkgPSAwO1xyXG5cclxuICAgIGZvciAobGV0IGVsIG9mIHZlcnRzKSB7XHJcbiAgICAgIHZ0dHNbaSsrXSA9IGVsLnBvcy54O1xyXG4gICAgICB2dHRzW2krK10gPSBlbC5wb3MueTtcclxuICAgICAgdnR0c1tpKytdID0gZWwucG9zLno7XHJcbiAgICAgIHZ0dHNbaSsrXSA9IGVsLm5vcm0ueDtcclxuICAgICAgdnR0c1tpKytdID0gZWwubm9ybS55O1xyXG4gICAgICB2dHRzW2krK10gPSBlbC5ub3JtLno7XHJcbiAgICB9XHJcbiAgICBjb25zdCBwb3NMb2MgPSBybmQuZ2wuZ2V0QXR0cmliTG9jYXRpb24ocm5kLnByZywgXCJJblBvc2l0aW9uXCIpO1xyXG4gICAgY29uc3Qgbm9ybUxvYyA9IHJuZC5nbC5nZXRBdHRyaWJMb2NhdGlvbihybmQucHJnLCBcIkluTm9ybWFsXCIpO1xyXG4gICAgdGhpcy52ZXJ0ZXhBcnJheSA9IHJuZC5nbC5jcmVhdGVWZXJ0ZXhBcnJheSgpO1xyXG4gICAgcm5kLmdsLmJpbmRWZXJ0ZXhBcnJheSh0aGlzLnZlcnRleEFycmF5KTtcclxuICAgIHRoaXMudmVydGV4QnVmZmVyID0gcm5kLmdsLmNyZWF0ZUJ1ZmZlcigpO1xyXG5cclxuICAgIHJuZC5nbC5iaW5kQnVmZmVyKHJuZC5nbC5BUlJBWV9CVUZGRVIsIHRoaXMudmVydGV4QnVmZmVyKTtcclxuICAgIHJuZC5nbC5idWZmZXJEYXRhKFxyXG4gICAgICBybmQuZ2wuQVJSQVlfQlVGRkVSLFxyXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KHZ0dHMpLFxyXG4gICAgICBybmQuZ2wuU1RBVElDX0RSQVdcclxuICAgICk7XHJcblxyXG4gICAgaWYgKHBvc0xvYyAhPSAtMSkge1xyXG4gICAgICBybmQuZ2wudmVydGV4QXR0cmliUG9pbnRlcihwb3NMb2MsIDMsIHJuZC5nbC5GTE9BVCwgZmFsc2UsIDI0LCAwKTtcclxuICAgICAgcm5kLmdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHBvc0xvYyk7XHJcbiAgICB9XHJcbiAgICBpZiAobm9ybUxvYyAhPSAtMSkge1xyXG4gICAgICBybmQuZ2wudmVydGV4QXR0cmliUG9pbnRlcihub3JtTG9jLCAzLCBybmQuZ2wuRkxPQVQsIGZhbHNlLCAyNCwgMTIpO1xyXG4gICAgICBybmQuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkobm9ybUxvYyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbmRleEJ1ZmZlciA9IHJuZC5nbC5jcmVhdGVCdWZmZXIoKTtcclxuICAgIHJuZC5nbC5iaW5kQnVmZmVyKHJuZC5nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUiwgdGhpcy5pbmRleEJ1ZmZlciksXHJcbiAgICAgIHJuZC5nbC5idWZmZXJEYXRhKFxyXG4gICAgICAgIHJuZC5nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUixcclxuICAgICAgICBuZXcgVWludDMyQXJyYXkoaW5kcyksXHJcbiAgICAgICAgcm5kLmdsLlNUQVRJQ19EUkFXXHJcbiAgICAgICk7XHJcblxyXG4gICAgdGhpcy5udW1PZkVsZW1lbnRzID0gaW5kcy5sZW5ndGg7XHJcblxyXG4gICAgdGhpcy53b3JsZCA9IG1hdDQoKTtcclxuICB9XHJcblxyXG4gIGRyYXcocm5kKSB7XHJcbiAgICBybmQuZ2wuYmluZFZlcnRleEFycmF5KHRoaXMudmVydGV4QXJyYXkpO1xyXG4gICAgcm5kLmdsLmJpbmRCdWZmZXIocm5kLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCB0aGlzLmluZGV4QnVmZmVyKTtcclxuICAgIHJuZC5nbC5kcmF3RWxlbWVudHMoXHJcbiAgICAgIHJuZC5nbC5UUklBTkdMRVMsXHJcbiAgICAgIHRoaXMubnVtT2ZFbGVtZW50cyxcclxuICAgICAgcm5kLmdsLlVOU0lHTkVEX0lOVCxcclxuICAgICAgMFxyXG4gICAgKTtcclxuXHJcbiAgICBpZiAocm5kLnd2cExvYyAhPSAtMSkge1xyXG4gICAgICBybmQuZ2wudW5pZm9ybU1hdHJpeDRmdihcclxuICAgICAgICBybmQud3ZwTG9jLFxyXG4gICAgICAgIGZhbHNlLFxyXG4gICAgICAgIG5ldyBGbG9hdDMyQXJyYXkoW10uY29uY2F0KHRoaXMud29ybGQubXVsKHJuZC5wcm9qKSkpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcHJpbWl0aXZlKHJuZCwgdmVydHMsIGluZHMpIHtcclxuICByZXR1cm4gbmV3IF9wcmltaXRpdmUocm5kLCB2ZXJ0cywgaW5kcyk7XHJcbn1cclxuIiwiZXhwb3J0IGZ1bmN0aW9uIHRpbWVyKCkge1xyXG4gIGNvbnN0IGdldFRpbWUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgIGxldCB0ID1cclxuICAgICAgZGF0ZS5nZXRNaWxsaXNlY29uZHMgLyAxMDAwLjAgKyBkYXRlLmdldFNlY29uZHMoKSArIGRhdGUuZ2V0TWludXRlcyAqIDYwO1xyXG4gICAgcmV0dXJuIHQ7XHJcbiAgfTtcclxuXHJcbiAgdGhpcy5yZXNwb25jZSA9ICh0YWdfaWQgPSBudWxsKSA9PiB7XHJcbiAgICBsZXQgdCA9IGdldFRpbWUoKTtcclxuXHJcbiAgICAvLyBnbG9iYWwgdGltZVxyXG4gICAgdGhpcy5nbG9iYWxUaW1lID0gdDtcclxuICAgIHRoaXMuZ2xvYmFsRGVsdGFUaW1lID0gdCAtIHRoaXMub2xkVGltZTtcclxuXHJcbiAgICBpZiAodGhpcy5pc1BhdXNlKSB7XHJcbiAgICAgIHRoaXMubG9jYWxEZWx0YVRpbWUgPSAwO1xyXG4gICAgICB0aGlzLnBhdXNlVGltZSArPSB0IC0gdGhpcy5vbGRUaW1lO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5sb2NhbERlbHRhVGltZSA9IHRoaXMuZ2xvYmFsRGVsdGFUaW1lO1xyXG4gICAgICB0aGlzLmxvY2FsVGltZSA9IHQgLSB0aGlzLnBhdXNlVGltZSAtIHRoaXMuc3RhcnRUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZnJhbWVDb3VudGVyKys7XHJcbiAgICBpZiAodCAtIHRoaXMub2xkVGltZUZQUyA+IDMpIHtcclxuICAgICAgdGhpcy5GUFMgPSB0aGlzLmZyYW1lQ291bnRlciAvICh0IC0gdGhpcy5vbGRUaW1lRlBTKTtcclxuICAgICAgdGhpcy5vbGRUaW1lRlBTID0gdDtcclxuICAgICAgdGhpcy5mcmFtZUNvdW50ZXIgPSAwO1xyXG4gICAgICBpZiAodGFnX2lkICE9IG51bGwpXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFnX2lkKS5pbm5lckhUTUwgPSB0aGlzLmdldEZQUygpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5vbGRUaW1lID0gdDtcclxuICB9O1xyXG5cclxuICB0aGlzLmdldEZQUyA9ICgpID0+IHRoaXMuRlBTLnRvRml4ZWQoMyk7XHJcblxyXG4gIHRoaXMuZ2xvYmFsVGltZSA9IHRoaXMubG9jYWxUaW1lID0gZ2V0VGltZSgpO1xyXG4gIHRoaXMuZ2xvYmFsRGVsdGFUaW1lID0gdGhpcy5sb2NhbERlbHRhVGltZSA9IDA7XHJcblxyXG4gIHRoaXMuc3RhcnRUaW1lID0gdGhpcy5vbGRUaW1lID0gdGhpcy5vbGRUaW1lRlBTID0gdGhpcy5nbG9iYWxUaW1lO1xyXG4gIHRoaXMuZnJhbWVDb3VudGVyID0gMDtcclxuICB0aGlzLmlzUGF1c2UgPSBmYWxzZTtcclxuICB0aGlzLkZQUyA9IDMwLjA7XHJcbiAgdGhpcy5wYXVzZVRpbWUgPSAwO1xyXG5cclxuICByZXR1cm4gdGhpcztcclxufSAvLyBFbmQgb2YgJ3RpbWVyJyBmdW5jdGlvblxyXG4iLCJpbXBvcnQgeyBtYXQ0RnJ1c3R1bSB9IGZyb20gXCIuLi9tdGgvbXRoX21hdDRcIjtcclxuaW1wb3J0IHNoYWRlciBmcm9tIFwiLi9zaGQvc2hkXCI7XHJcbmltcG9ydCB7IHRpbWVyIH0gZnJvbSBcIi4uL3RpbWVyL3RpbWVyXCI7XHJcblxyXG5jbGFzcyBfcmVuZGVyIHtcclxuICBjb25zdHJ1Y3RvcihjYW52YXMpIHtcclxuICAgIHRoaXMuZ2wgPSBjYW52YXMuZ2V0Q29udGV4dChcIndlYmdsMlwiKTtcclxuICAgIHRoaXMud2lkdGggPSBjYW52YXMud2lkdGg7XHJcbiAgICB0aGlzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XHJcblxyXG4gICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5ERVBUSF9URVNUKTtcclxuXHJcbiAgICB3aW5kb3cuZ2wgPSB0aGlzLmdsO1xyXG5cclxuICAgIC8vdGhpcy5wcmcgPSBzaGFkZXIoXCJkZWZhdWx0XCIpO1xyXG4gICAgbGV0IHZzX3R4dCA9IGAjdmVyc2lvbiAzMDAgZXNcclxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xyXG5cclxuaW4gdmVjMyBJblBvc2l0aW9uO1xyXG5pbiB2ZWMzIEluTm9ybWFsO1xyXG4gICAgXHJcbm91dCB2ZWMyIERyYXdQb3M7XHJcbm91dCB2ZWMzIERyYXdOb3JtYWw7XHJcblxyXG51bmlmb3JtIGZsb2F0IFRpbWU7XHJcbnVuaWZvcm0gbWF0NCBNYXRyV1ZQO1xyXG4gXHJcbnZvaWQgbWFpbiggdm9pZCApXHJcbntcclxuICBnbF9Qb3NpdGlvbiA9IE1hdHJXVlAgKiB2ZWM0KEluUG9zaXRpb24sIDEpO1xyXG4gIERyYXdQb3MgPSBJblBvc2l0aW9uLnh5O1xyXG59XHJcbiAgICBgO1xyXG5cclxuICAgIGxldCBmc190eHQgPSBgI3ZlcnNpb24gMzAwIGVzXHJcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcclxuXHJcbmluIHZlYzMgRHJhd05vcm1hbDtcclxub3V0IHZlYzQgT3V0Q29sb3I7XHJcblxyXG51bmlmb3JtIGZsb2F0IFRpbWU7XHJcbnVuaWZvcm0gdmVjMyBDYW1EaXI7XHJcbiBcclxudm9pZCBtYWluKCB2b2lkIClcclxue1xyXG4gIHZlYzMgQ2FtRGlyID0gdmVjMygtNSwgLTUsIC01KTtcclxuICBmbG9hdCBubCA9IG1heCgwLjIsIGRvdChEcmF3Tm9ybWFsLCBub3JtYWxpemUoLUNhbURpcikpKTtcclxuICB2ZWMzIERyYXdDb2xvciA9IHZlYzMoMC43LCAwLjQ1LCAwLjE3KTtcclxuXHJcbiAgT3V0Q29sb3IgPSB2ZWM0KERyYXdDb2xvciAqIG5sLCAxLjApO1xyXG59XHJcbiAgICBgO1xyXG5cclxuICAgIGxldCB2cyA9IGxvYWRTaGFkZXIodGhpcy5nbC5WRVJURVhfU0hBREVSLCB2c190eHQpLFxyXG4gICAgICBmcyA9IGxvYWRTaGFkZXIodGhpcy5nbC5GUkFHTUVOVF9TSEFERVIsIGZzX3R4dCk7XHJcbiAgICB0aGlzLnByZyA9IHRoaXMuZ2wuY3JlYXRlUHJvZ3JhbSgpO1xyXG5cclxuICAgIHRoaXMuZ2wuYXR0YWNoU2hhZGVyKHRoaXMucHJnLCB2cyk7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByZywgZnMpO1xyXG4gICAgdGhpcy5nbC5saW5rUHJvZ3JhbSh0aGlzLnByZyk7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByZywgZ2wuTElOS19TVEFUVVMpKSB7XHJcbiAgICAgIGxldCBidWYgPSBnbC5nZXRQcm9ncmFtSW5mb0xvZyh0aGlzLnByZyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiU2hhZGVyIHByb2dyYW0gbGluayBmYWlsOiBcIiArIGJ1Zik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy50aW1lTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcmcsIFwiVGltZVwiKTtcclxuICAgIHRoaXMud3ZwTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcmcsIFwiTUF0cldWUFwiKTtcclxuICAgIHRoaXMuY2FtRGlyTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcmcsIFwiQ2FtRGlyXCIpO1xyXG5cclxuICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByZyk7XHJcbiAgICB0aGlzLmdsLmNsZWFyQ29sb3IoMC4zLCAwLjQ3LCAwLjgsIDEpO1xyXG5cclxuICAgIHRoaXMucHJvalNpemUgPSAwLjE7XHJcbiAgICB0aGlzLnByb2pEaXN0ID0gMC4xO1xyXG4gICAgdGhpcy5mYXJDbGlwID0gMzAwO1xyXG5cclxuICAgIGxldCByeCA9IHRoaXMucHJvalNpemU7XHJcbiAgICBsZXQgcnkgPSB0aGlzLnByb2pTaXplO1xyXG5cclxuICAgIGlmICh0aGlzLndpZHRoID49IHRoaXMuaGVpZ2h0KSByeCAqPSB0aGlzLndpZHRoIC8gdGhpcy5oZWlnaHQ7XHJcbiAgICBlbHNlIHJ5ICo9IHRoaXMuaGVpZ2h0IC8gdGhpcy53aWR0aDtcclxuXHJcbiAgICAocnggKj0gMC41KSwgKHJ5ICo9IDAuNSk7XHJcblxyXG4gICAgdGhpcy5wcm9qID0gbWF0NEZydXN0dW0oLXJ4LCByeCwgLXJ5LCByeSwgdGhpcy5wcm9qRGlzdCwgdGhpcy5mYXJDbGlwKTtcclxuXHJcbiAgICB0aGlzLnRpbWUgPSBuZXcgdGltZXIoKTtcclxuICAgIHRoaXMudGltZS5yZXNwb25jZSgpO1xyXG4gIH0gLy8gRW5kIG9mICdjb25zdHJ1Y3RvcicgZnVuY3Rpb25cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgdGhpcy5nbC5jbGVhcih0aGlzLmdsLkNPTE9SX0JVRkZFUl9CSVQpO1xyXG4gICAgdGhpcy5nbC5jbGVhcih0aGlzLmdsLkRFUFRIX0JVRkZFUl9CSVQpO1xyXG5cclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMudGltZUxvYywgdGhpcy50aW1lLmdsb2JhbFRpbWUpO1xyXG4gIH1cclxufSAvLyBFbmQgb2YgJ19yZW5kZXInIGNsYXNzXHJcblxyXG5mdW5jdGlvbiByZW5kZXIoLi4uYXJncykge1xyXG4gIHJldHVybiBuZXcgX3JlbmRlciguLi5hcmdzKTtcclxufVxyXG5cclxuLy8gTG9hZCBhbmQgY29tcGlsZSBzaGFkZXIgZnVuY3Rpb25cclxuZnVuY3Rpb24gbG9hZFNoYWRlcihzaGFkZXJUeXBlLCBzaGFkZXJTb3VyY2UpIHtcclxuICBjb25zdCBzaGFkZXIgPSBnbC5jcmVhdGVTaGFkZXIoc2hhZGVyVHlwZSk7XHJcbiAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgc2hhZGVyU291cmNlKTtcclxuICBnbC5jb21waWxlU2hhZGVyKHNoYWRlcik7XHJcbiAgaWYgKCFnbC5nZXRTaGFkZXJQYXJhbWV0ZXIoc2hhZGVyLCBnbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgIGxldCBidWYgPSBnbC5nZXRTaGFkZXJJbmZvTG9nKHNoYWRlcik7XHJcbiAgICBjb25zb2xlLmxvZyhcIlNoYWRlciBjb21waWxlIGZhaWw6IFwiICsgYnVmKTtcclxuICB9XHJcbiAgcmV0dXJuIHNoYWRlcjtcclxufSAvLyBFbmQgb2YgJ2xvYWRTaGFkZXInIGZ1bmN0aW9uXHJcblxyXG5leHBvcnQgZGVmYXVsdCByZW5kZXI7XHJcbiIsImltcG9ydCB7IG1hdDRSb3RhdGUsIG1hdDRUcmFuc2xhdGUgfSBmcm9tIFwiLi9tdGgvbXRoX21hdDRcIjtcclxuaW1wb3J0IHZlYzMgZnJvbSBcIi4vbXRoL210aF92ZWMzXCI7XHJcbmltcG9ydCB7IGNvdW50Tm9ybWFscywgcHJpbWl0aXZlLCB2ZXJ0ZXggfSBmcm9tIFwiLi9ybmQvcHJpbS9wcmltXCI7XHJcbmltcG9ydCByZW5kZXIgZnJvbSBcIi4vcm5kL3JuZFwiO1xyXG5pbXBvcnQgeyB0aW1lciB9IGZyb20gXCIuL3RpbWVyL3RpbWVyXCI7XHJcblxyXG5sZXQgcm5kLCBwcmltLCB3b3JrVGltZTtcclxuXHJcbmNvbnN0IGRyYXcgPSAoKSA9PiB7XHJcbiAgcm5kLnJlbmRlcigpO1xyXG4gIHByaW0ud29ybGQgPSBtYXQ0Um90YXRlKE1hdGguc2luKHdvcmtUaW1lLmxvY2FsVGltZSksIHZlYzMoMSwgMSwgMykpLm11bChcclxuICAgIG1hdDRUcmFuc2xhdGUodmVjMygwLCBNYXRoLmNvcyh3b3JrVGltZS5sb2NhbFRpbWUgKiAyKSwgMCkpXHJcbiAgKTtcclxuICBwcmltLmRyYXcocm5kKTtcclxuICBybmQucmVuZGVyKCk7XHJcbiAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShkcmF3KTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIG1haW4oKSB7XHJcbiAgcm5kID0gcmVuZGVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlDYW5cIikpO1xyXG5cclxuICB3b3JrVGltZSA9IG5ldyB0aW1lcigpO1xyXG4gIHdvcmtUaW1lLnJlc3BvbmNlKFwibXlDYW46ZnBzXCIpO1xyXG5cclxuICBsZXQgdmVydHMgPSBbXHJcbiAgICB2ZXJ0ZXgodmVjMygtMSkpLFxyXG4gICAgdmVydGV4KHZlYzMoLTEsIDEsIC0xKSksXHJcbiAgICB2ZXJ0ZXgodmVjMygxLCAxLCAtMSkpLFxyXG4gICAgdmVydGV4KHZlYzMoMSwgLTEsIC0xKSksXHJcbiAgICB2ZXJ0ZXgodmVjMygtMSwgLTEsIDEpKSxcclxuICAgIHZlcnRleCh2ZWMzKC0xLCAxLCAxKSksXHJcbiAgICB2ZXJ0ZXgodmVjMygxLCAxLCAxKSksXHJcbiAgICB2ZXJ0ZXgodmVjMygxLCAtMSwgMSkpLFxyXG4gIF07XHJcblxyXG4gIGxldCBpbmRzID0gW1xyXG4gICAgMCwgMSwgMiwgMCwgMiwgMywgNCwgNSwgNiwgNCwgNiwgNywgMCwgMSwgNCwgMSwgNCwgNSwgMiwgNiwgNywgMiwgNywgMywgMSxcclxuICAgIDUsIDYsIDEsIDYsIDIsIDAsIDQsIDcsIDAsIDcsIDMsXHJcbiAgXTtcclxuXHJcbiAgY291bnROb3JtYWxzKHZlcnRzLCBpbmRzKTtcclxuXHJcbiAgcHJpbSA9IHByaW1pdGl2ZShybmQsIHZlcnRzLCBpbmRzKTtcclxuXHJcbiAgZHJhdygpO1xyXG59XHJcblxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4ge1xyXG4gIG1haW4oKTtcclxufSk7XHJcblxyXG5jb25zb2xlLmxvZyhcIkNHU0cgZm9yZXZlciEhISBteWxpYi5qcyBpbXBvcnRlZFwiKTtcclxuIl0sIm5hbWVzIjpbIl9tYXQ0IiwiY29uc3RydWN0b3IiLCJtIiwidW5kZWZpbmVkIiwibGVuZ3RoIiwidGhpcyIsImRldGVybSIsIm1hdDNEZXRlcm0iLCJtdWwiLCJyIiwibWF0NCIsIm11bDMiLCJtMSIsIm0yIiwibXVsNCIsIm0zIiwibXVsNSIsIm00IiwibXVsNiIsIm01IiwiaW52ZXJzZSIsImRldCIsInRyYW5zcG9zZSIsIm1hdDRSb3RhdGUiLCJhbmdsZSIsInZlY3RvciIsImEiLCJNYXRoIiwiUEkiLCJzaSIsInNpbiIsImNvIiwiY29zIiwidiIsIm5vcm1hbGl6ZSIsIngiLCJ5IiwieiIsIkExMSIsIkExMiIsIkExMyIsIkEyMSIsIkEyMiIsIkEyMyIsIkEzMSIsIkEzMiIsIkEzMyIsIm1hdCIsIl92ZWMzIiwidmVjMyIsImFkZCIsImFkZDMiLCJ1IiwiYWRkNCIsIm4iLCJzdWIiLCJkaXYiLCJuZWciLCJkb3QiLCJsZW4iLCJsIiwic3FydCIsImNyb3NzIiwidHJhbnNmb3JtIiwibXVsTWF0ciIsInciLCJwb2ludFRyYW5zZm9ybSIsImFyZ3MiLCJfdmVydGV4IiwicG9zIiwibm9ybSIsInZlcnRleCIsIl9wcmltaXRpdmUiLCJybmQiLCJ2ZXJ0cyIsImluZHMiLCJ2dHRzIiwiaSIsImVsIiwicG9zTG9jIiwiZ2wiLCJnZXRBdHRyaWJMb2NhdGlvbiIsInByZyIsIm5vcm1Mb2MiLCJ2ZXJ0ZXhBcnJheSIsImNyZWF0ZVZlcnRleEFycmF5IiwiYmluZFZlcnRleEFycmF5IiwidmVydGV4QnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiYmluZEJ1ZmZlciIsIkFSUkFZX0JVRkZFUiIsImJ1ZmZlckRhdGEiLCJGbG9hdDMyQXJyYXkiLCJTVEFUSUNfRFJBVyIsInZlcnRleEF0dHJpYlBvaW50ZXIiLCJGTE9BVCIsImVuYWJsZVZlcnRleEF0dHJpYkFycmF5IiwiaW5kZXhCdWZmZXIiLCJFTEVNRU5UX0FSUkFZX0JVRkZFUiIsIlVpbnQzMkFycmF5IiwibnVtT2ZFbGVtZW50cyIsIndvcmxkIiwiZHJhdyIsImRyYXdFbGVtZW50cyIsIlRSSUFOR0xFUyIsIlVOU0lHTkVEX0lOVCIsInd2cExvYyIsInVuaWZvcm1NYXRyaXg0ZnYiLCJjb25jYXQiLCJwcm9qIiwidGltZXIiLCJnZXRUaW1lIiwiZGF0ZSIsIkRhdGUiLCJnZXRNaWxsaXNlY29uZHMiLCJnZXRTZWNvbmRzIiwiZ2V0TWludXRlcyIsInJlc3BvbmNlIiwidGFnX2lkIiwidCIsImdsb2JhbFRpbWUiLCJnbG9iYWxEZWx0YVRpbWUiLCJvbGRUaW1lIiwiaXNQYXVzZSIsImxvY2FsRGVsdGFUaW1lIiwicGF1c2VUaW1lIiwibG9jYWxUaW1lIiwic3RhcnRUaW1lIiwiZnJhbWVDb3VudGVyIiwib2xkVGltZUZQUyIsIkZQUyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJnZXRGUFMiLCJ0b0ZpeGVkIiwiX3JlbmRlciIsImNhbnZhcyIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImVuYWJsZSIsIkRFUFRIX1RFU1QiLCJ3aW5kb3ciLCJ2cyIsImxvYWRTaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiZnMiLCJGUkFHTUVOVF9TSEFERVIiLCJjcmVhdGVQcm9ncmFtIiwiYXR0YWNoU2hhZGVyIiwibGlua1Byb2dyYW0iLCJnZXRQcm9ncmFtUGFyYW1ldGVyIiwiTElOS19TVEFUVVMiLCJidWYiLCJnZXRQcm9ncmFtSW5mb0xvZyIsImNvbnNvbGUiLCJsb2ciLCJ0aW1lTG9jIiwiZ2V0VW5pZm9ybUxvY2F0aW9uIiwiY2FtRGlyTG9jIiwidXNlUHJvZ3JhbSIsImNsZWFyQ29sb3IiLCJwcm9qU2l6ZSIsInByb2pEaXN0IiwiZmFyQ2xpcCIsInJ4IiwicnkiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJ0b3AiLCJuZWFyIiwiZmFyIiwidGltZSIsInJlbmRlciIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJ1bmlmb3JtMWYiLCJzaGFkZXJUeXBlIiwic2hhZGVyU291cmNlIiwic2hhZGVyIiwiY3JlYXRlU2hhZGVyIiwiY29tcGlsZVNoYWRlciIsImdldFNoYWRlclBhcmFtZXRlciIsIkNPTVBJTEVfU1RBVFVTIiwiZ2V0U2hhZGVySW5mb0xvZyIsInByaW0iLCJ3b3JrVGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1haW4iLCJpbmRleGVzIiwibjAiLCJuMSIsIm4yIiwicDAiLCJwMSIsInAyIiwiTiIsImNvdW50Tm9ybWFscyIsInByaW1pdGl2ZSIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJ5QkFPQSxNQUFNQSxFQUVKLFdBQUFDLENBQVlDLEdBQ0RDLE1BQUxELEdBU0ssTUFBTEEsRUFTWSxpQkFBTEEsR0FBNkIsR0FBWkEsRUFBRUUsT0FBYUMsS0FBS0gsRUFBSUEsRUFDL0NHLEtBQUtILEVBQUlBLEVBQUVBLEVBbEJkRyxLQUFLSCxFQUFJLENBQ1AsQ0FBQyxFQUFHLEVBQUcsRUFBRyxHQUNWLENBQUMsRUFBRyxFQUFHLEVBQUcsR0FDVixDQUFDLEVBQUcsRUFBRyxFQUFHLEdBQ1YsQ0FBQyxFQUFHLEVBQUcsRUFBRyxHQWVmLENBR0QsTUFBQUksR0FDRSxPQUNFRCxLQUFLSCxFQUFFLEdBQUcsR0FDUkssRUFDRUYsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsS0FFYkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1RLLEVBQ0VGLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLElBRWRHLEtBQUtILEVBQUUsR0FBRyxHQUNSSyxFQUNFRixLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxLQUViRyxLQUFLSCxFQUFFLEdBQUcsR0FDVEssRUFDRUYsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FHakIsQ0FNRCxHQUFBTSxDQUFJTixHQUNGLElBQUlPLEVBQUlDLElBc0ZSLE9BcEZBRCxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN4Qk8sRUFBRVAsRUFBRSxHQUFHLEdBQ0xHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDeEJPLEVBQUVQLEVBQUUsR0FBRyxHQUNMRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3hCTyxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUV4Qk8sRUFBRVAsRUFBRSxHQUFHLEdBQ0xHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDeEJPLEVBQUVQLEVBQUUsR0FBRyxHQUNMRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3hCTyxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN4Qk8sRUFBRVAsRUFBRSxHQUFHLEdBQ0xHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FFeEJPLEVBQUVQLEVBQUUsR0FBRyxHQUNMRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3hCTyxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN4Qk8sRUFBRVAsRUFBRSxHQUFHLEdBQ0xHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDeEJPLEVBQUVQLEVBQUUsR0FBRyxHQUNMRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBRXhCTyxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN4Qk8sRUFBRVAsRUFBRSxHQUFHLEdBQ0xHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDdEJHLEtBQUtILEVBQUUsR0FBRyxHQUFLQSxFQUFFQSxFQUFFLEdBQUcsR0FDeEJPLEVBQUVQLEVBQUUsR0FBRyxHQUNMRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3RCRyxLQUFLSCxFQUFFLEdBQUcsR0FBS0EsRUFBRUEsRUFBRSxHQUFHLEdBQ3hCTyxFQUFFUCxFQUFFLEdBQUcsR0FDTEcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUN0QkcsS0FBS0gsRUFBRSxHQUFHLEdBQUtBLEVBQUVBLEVBQUUsR0FBRyxHQUVqQk8sQ0FDUixDQUVELElBQUFFLENBQUtDLEVBQUlDLEdBQ1AsT0FBT1IsS0FBS0csSUFBSUksRUFBR0osSUFBSUssR0FDeEIsQ0FFRCxJQUFBQyxDQUFLRixFQUFJQyxFQUFJRSxHQUNYLE9BQU9WLEtBQUtHLElBQUlJLEVBQUdELEtBQUtFLEVBQUlFLEdBQzdCLENBRUQsSUFBQUMsQ0FBS0osRUFBSUMsRUFBSUUsRUFBSUUsR0FDZixPQUFPWixLQUFLRyxJQUFJSSxFQUFHRSxLQUFLRCxFQUFJRSxFQUFJRSxHQUNqQyxDQUVELElBQUFDLENBQUtOLEVBQUlDLEVBQUlFLEVBQUlFLEVBQUlFLEdBQ25CLE9BQU9kLEtBQUtHLElBQUlJLEVBQUdJLEtBQUtILEVBQUlFLEVBQUlFLEVBQUlFLEdBQ3JDLENBT0QsT0FBQUMsR0FDRSxJQUFJWCxFQUFJQyxJQUNKVyxFQUFNaEIsS0FBS0MsU0FFZixPQUFXLEdBQVBlLElBRUpaLEVBQUVQLEVBQUUsR0FBRyxJQUNKSyxFQUNDRixLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxJQUNSbUIsRUFDTlosRUFBRVAsRUFBRSxHQUFHLElBQ0pLLEVBQ0NGLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLElBQ1JtQixFQUNOWixFQUFFUCxFQUFFLEdBQUcsSUFDSkssRUFDQ0YsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsSUFDUm1CLEVBQ05aLEVBQUVQLEVBQUUsR0FBRyxJQUNKSyxFQUNDRixLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUsR0FBRyxHQUNWRyxLQUFLSCxFQUFFLEdBQUcsR0FDVkcsS0FBS0gsRUFBRSxHQUFHLEdBQ1ZHLEtBQUtILEVBQUUs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
